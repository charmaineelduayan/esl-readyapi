<?xml version="1.0" encoding="UTF-8"?>
<con:testCase id="2d69bf79-ceac-418c-a377-8c4b4518120e" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="validateCruiseBooking-Invalid/Empty Fields/NegTS" searchProperties="true" timeout="0" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="2d69bf79-ceac-418c-a377-8c4b4518120efileName">validateCruiseBooking-Invalid%2FEmpty-Fields%2FNegTS</con:setting>
  </con:settings>
  <con:testStep type="properties" name="Properties 1" id="71196fbc-9e82-43a1-964d-a766b8679eb6">
    <con:settings/>
    <con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:properties>
        <con:property><con:name>BOOKINGID</con:name><con:value>000</con:value></con:property><con:property>
          <con:name>BOOKINGID1</con:name>
          <con:value xsi:nil="true"/>
        </con:property>
      </con:properties>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="cruiseSearch" id="c337327a-b000-4277-8fe3-e9d2ff77163a">
    <con:settings/>
    <con:config service="Cruise Search" methodName="cruiseSearch" resourcePath="/esl/search/rest/cruiseSearch" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="cruiseSearch" id="4b83a4b3-3cb3-4dac-ab4a-9f8353f23135" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:request/>
        <con:originalUri>http://eslaservicestst01.rccl.com/esl/search/rest/cruiseSearch</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="aeea0b73-a636-43f8-9e7e-592c253cb5c6" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="970f9f2a-b98c-4157-a7d0-bdb110cadbb3" name="Script Assertion">
          <con:configuration>
            <scriptText>def xmlRes = messageExchange.getResponse().contentAsString
def xmlSlurper = new groovy.xml.XmlSlurper();
def parse = xmlSlurper.parseText(xmlRes)
log.info parse


def totalHits = (parse.resultsSummary.totalHits.text()).toInteger()
log.info totalHits
assert totalHits!=0</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters><con:entry key="qualifiers.qualifierScope" value="SEARCH_AND_PRICE"/><con:entry key="header.language" value="en_us"/><con:entry key="resultsPreference.includeOnlyIfPriceAvailable" value="true"/><con:entry key="criteria.channel" value="VP"/><con:entry key="qualifiers.offersType.strictPricingFlag" value="true"/><con:entry key="qualifiers.priceScope" value="REQUESTED_AVAILABLE"/><con:entry key="resultsPreference.includeResults" value="true"/><con:entry key="criteria.currency" value="USD"/><con:entry key="resultsPreference.strictSearch" value="true"/><con:entry key="criteria.ship.value" value="${#Global#celebrityShip}"/><con:entry key="resultsPreference.priceLevel.bestPricedCategory" value="true"/><con:entry key="criteria.sailingDate.dateRange.from" value="${#Global#dateRangeFrom}"/><con:entry key="criteria.sailingDate.date" value=""/><con:entry key="resultsPreference.sortOrder" value="DESCENDING"/><con:entry key="resultsPreference.includePrices" value="true"/><con:entry key="resultsPreference.groupBy" value="PACKAGE"/><con:entry key="criteria.bookingType" value="FIT"/><con:entry key="resultsPreference.pagination.count" value="100"/><con:entry key="header.domainId" value="1"/><con:entry key="criteria.occupancy.adult" value="2"/><con:entry key="resultsPreference.sortBy" value="DURATION"/><con:entry key="criteria.sailingDate.dateRange.to" value="${#Global#dateRangeTo}"/></con:parameters>
        <con:parameterOrder>
          <con:entry>criteria.channel</con:entry>
          <con:entry>criteria.bookingType</con:entry>
          <con:entry>header.domainId</con:entry>
          <con:entry>header.language</con:entry>
          <con:entry>header.application</con:entry>
          <con:entry>criteria.brand.value</con:entry>
          <con:entry>criteria.ship.value</con:entry>
          <con:entry>criteria.cruiseType.value</con:entry>
          <con:entry>criteria.office</con:entry>
          <con:entry>criteria.country</con:entry>
          <con:entry>criteria.currency</con:entry>
          <con:entry>criteria.occupancy.adult</con:entry>
          <con:entry>resultsPreference.pagination.offset</con:entry>
          <con:entry>resultsPreference.pagination.count</con:entry>
          <con:entry>resultsPreference.strictSearch</con:entry>
          <con:entry>resultsPreference.sortBy</con:entry>
          <con:entry>resultsPreference.sortOrder</con:entry>
          <con:entry>resultsPreference.groupBy</con:entry>
          <con:entry>resultsPreference.includeResults</con:entry>
          <con:entry>resultsPreference.includeOnlyIfPriceAvailable</con:entry>
          <con:entry>resultsPreference.priceLevel.bestPricedCategory</con:entry>
          <con:entry>resultsPreference.includePrices</con:entry>
          <con:entry>qualifiers.priceScope</con:entry>
          <con:entry>qualifiers.qualifierScope</con:entry>
          <con:entry>qualifiers.offersType.strictPricingFlag</con:entry>
          <con:entry>qualifiers.itineraryGroup.value</con:entry>
          <con:entry>criteria.sailingDate.dateRange.from</con:entry>
          <con:entry>criteria.sailingDate.dateRange.to</con:entry>
          <con:entry>criteria.sailingDate.date</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="c3a4b580-ecc4-4d69-9e64-f4e9abf07977">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="1c5befc7-2431-43ac-871b-0634d210ea0b">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="40616221-3f9c-4753-b281-39f5bafc4e2c">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Fetch_REQ_app/country/currency" id="45379c51-2c39-43aa-8344-4e3fb49a60cb">
    <con:settings/>
    <con:config>
      <script>import java.io.*;
import java.util.*;
import com.eviware.soapui.model.testsuite.*;
import com.eviware.soapui.impl.wsdl.teststeps.assertions.*;
import org.apache.commons.lang3.StringUtils;


def ts = testRunner.testCase.getTestStepByName("cruiseSearch");
String  url =  ts.getHttpRequest().getResponse().getURL(); 
log.info(url)

String app = StringUtils.substringBetween(url, "header.application=", "&amp;");
log.info(app)
testRunner.testCase.setPropertyValue("application",app);


String country = StringUtils.substringBetween(url, "criteria.country=", "&amp;");
log.info(country)
testRunner.testCase.setPropertyValue("country",country);


String currency = StringUtils.substringBetween(url, "criteria.currency=", "&amp;");
log.info(currency)
testRunner.testCase.setPropertyValue("currency",currency);

String language = StringUtils.substringBetween(url, "header.language=", "&amp;");
log.info(language)
testRunner.testCase.setPropertyValue("language",language);</script>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Fetch_RES_brand/ship/saildate/package" id="2b5a37c4-c633-4850-8c4f-a8c9236c6c15">
    <con:settings/>
    <con:config>
      <script>import java.io.*;
import java.util.*;
import com.eviware.soapui.model.testsuite.*;
import com.eviware.soapui.impl.wsdl.teststeps.assertions.*;


def ts = testRunner.testCase.getTestStepByName("cruiseSearch");
def res = new XmlSlurper().parseText(ts.getPropertyValue("ResponseAsXml"));

//Set Test Case Package Code
def packageCode = res.resultsByPackage.packageSummaryWithClassLevelPricing[2].packageReference.@code.text()
log.info(packageCode)
testRunner.testCase.setPropertyValue("packageCode",packageCode);


//Set Test Case Ship Code
def  shipCode= packageCode.substring(0,2);
log.info(shipCode)
testRunner.testCase.setPropertyValue("shipCode",shipCode);

//Set Test Case Sail Date
def sailDate = res.resultsByPackage.packageSummaryWithClassLevelPricing[2].cabinClassPriceBySailing[2].sailingRef.@saildate.text()
log.info(sailDate)
testRunner.testCase.setPropertyValue("sailDate",sailDate);

//Set Test Case Brand
def celebrityBrand = "C"
def royalBrand = "R"

def celebrityShips = ['AX', 'AT', 'BY', 'CS', 'EC', 'EG', 'EQ', 'FL', 'IN', 'ML', 'RF', 'SI', 'SL', 'SM', 'XP', 'XO']
def royalShips = ['AD', 'AL', 'AN', 'BR', 'NE', 'EN', 'EX', 'FR', 'GR', 'HM', 'IC', 'ID', 'JW', 'LB', 'MJ', 'MA', 'NV', 'NC', 'OA', 'OY', 'OV', 'QN', 'RD', 'RH', 'SR', 'SC', 'SY', 'WC', 'UT', 'VI', 'VY', 'WN']


if (celebrityShips.contains(shipCode)) {	
	testRunner.testCase.setPropertyValue("brand",celebrityBrand);
	} else {
		testRunner.testCase.setPropertyValue("brand",royalBrand);
		}</script>
    </con:config>
  </con:testStep><con:testStep type="jdbc" name="JDBC Request" id="a766f170-d525-49bf-82a8-a2fceabb12c2" disabled="true">
    <con:settings>
      <con:setting id="prettyPrintResponse">true</con:setting>
    </con:settings>
    <con:config xsi:type="con:JdbcRequestTestStep" convertColumnNamesToUpperCase="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:dbConnectionName>Test_WebRemoteDataAccess_PBND</con:dbConnectionName>
      <con:driver>com.microsoft.sqlserver.jdbc.SQLServerDriver</con:driver>
      <con:connectionString>jdbc:sqlserver://WINSQLDDB01.TSTNA.TSTRCCL.COM:14725;databaseName=WebRemoteDataAccess_PBND;user=b2c_user;password=PASS_VALUE</con:connectionString>
      <con:password>b2c_user</con:password>
      <con:connectionProperties/>
      <con:query>SELECT DISTINCT TOP 100 
  booking.BVBKID AS bookingId
  FROM AS400_Mirror.dbo.RZBKVD booking
  INNER JOIN AS400_Mirror.dbo.RZPITD guestInfo (nolock)
  ON booking.BVBKID = guestInfo.ABBKID 
  AND guestInfo.ABPSTA = 'AC'  
  LEFT OUTER JOIN AS400_Mirror.dbo.RZINAD a (nolock)
  ON booking.BVBKID = a.NWIAID 
  LEFT OUTER JOIN AS400_Mirror.dbo.RZGRAD b (nolock)
  ON booking.BVGAID = b.BDGAID 
  WHERE booking.BVSDDT = 1191201 AND
  booking.BVSHIP = 'AL' AND
  booking.BVBKID LIKE '7%'</con:query>
      <con:assertion type="XPath Match" id="8bc88815-bc3a-4683-98f1-7d3f1c0cadba" name="Match content of [@rowNumber]">
        <con:configuration>
          <path>//Results[1]/ResultSet[1]/@fetchSize</path>
          <content>128</content>
          <allowWildcards>false</allowWildcards>
          <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
          <ignoreComments>false</ignoreComments>
        </con:configuration>
      </con:assertion>
      <con:properties/>
    </con:config>
  </con:testStep><con:testStep type="transfer" name="PropertyTransfer 1" id="cc3ef88d-f26a-4ede-b882-21369051bb1a" disabled="true">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>BOOKINGID</con:name>
        <con:sourceType>ResponseAsXml</con:sourceType>
        <con:sourceStep>JDBC Request</con:sourceStep>
        <con:sourcePath>//Results[1]/ResultSet[1]/Row[1]/BOOKINGID[1]</con:sourcePath>
        <con:targetType>BOOKINGID1</con:targetType>
        <con:targetStep>Properties 1</con:targetStep>
        <con:targetPath/>
        <con:type>XPATH</con:type>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep><con:testStep type="restrequest" name="validateCruiseBooking-invalid brand" id="d782bc4b-22cc-4039-aac6-c1d6392b5341"><con:settings/><con:config service="Booking" resourcePath="/rest/v3/cruisecritic/validateBatchBookings" methodName="validateBatchBookings" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="validateCruiseBooking-invalid brand" id="0b02ef39-ef4c-464e-a468-ec06526beec3" mediaType="application/json" postQueryString="false">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="AppKey" value="${#Project#AppKey}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
      </con:settings>
      <con:request>{
   "header" : {
     "application": "${#TestCase#application}",
	"brand": "ZZ",
	"domainId": 6,
	"language": "en_us",
      "uuid" : "3d11ba67-e179-4d95-8adc-7e81eab2e538"
   },
   "cruiseBookingInfo" : {
      "bookingIds" : [
         "${Properties 1#BOOKINGID}",
         "",
         ""
      ]
   }
}</con:request>
      <con:originalUri>https://tst1-int.api.rccl.com/esl/booking/tst2/rest/v3/cruisecritic/validateBatchBookings</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="57037fc4-e83a-4cf3-8623-ed07c7d3dfe6" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7befa535-ee69-4d1f-bacf-42ce029fabd4" name="Match content of [status]"><con:configuration><path>$['header']['status']</path><content>"Failure"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8075bb44-025b-4b6d-8010-df4b6c397896" name="Match content of [code]"><con:configuration><path>$['header']['error'][0]['code']</path><content>"CATL-005"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="a2b02378-a370-488c-a40c-fb908be87aa5" name="Contains"><con:configuration><token>Invalid brand.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials>
        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
        <con:authType>No Authorization</con:authType>
      </con:credentials>
      <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
      <con:parameters/>
    </con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="validateCruiseBooking-invalid bookingId" id="f1f715f4-b6d0-4c11-a6f6-8a19f089b510"><con:settings/><con:config service="Booking" resourcePath="/rest/v3/cruisecritic/validateBatchBookings" methodName="validateBatchBookings" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="validateCruiseBooking-invalid bookingId" id="0b02ef39-ef4c-464e-a468-ec06526beec3" mediaType="application/json" postQueryString="false">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="AppKey" value="${#Project#AppKey}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
      </con:settings>
      <con:request>{
   "header" : {
     "application": "${#TestCase#application}",
	"brand": "${#TestCase#brand}",
	"domainId": 6,
	"language": "en_us",
      "uuid" : "3d11ba67-e179-4d95-8adc-7e81eab2e538"
   },
   "cruiseBookingInfo" : {
      "bookingIds" : [
         "${Properties 1#BOOKINGID}",
         "",
         ""
      ]
   }
}</con:request>
      <con:originalUri>https://tst1-int.api.rccl.com/esl/booking/tst2/rest/v3/cruisecritic/validateBatchBookings</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="57037fc4-e83a-4cf3-8623-ed07c7d3dfe6" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7befa535-ee69-4d1f-bacf-42ce029fabd4" name="Match content of [status]"><con:configuration><path>$['header']['status']</path><content>"Failure"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="69ab931b-1f33-48c3-8425-370213f6cd87" name="Match content of [description]"><con:configuration><path>$['header']['error'][0]['description']</path><content>"Booking(s) not found."</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials>
        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
        <con:authType>No Authorization</con:authType>
      </con:credentials>
      <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
      <con:parameters/>
    </con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="validateCruiseBooking-blank brand" id="6f39d0e8-753f-441b-b7e8-6ad107690108"><con:settings/><con:config service="Booking" resourcePath="/rest/v3/cruisecritic/validateBatchBookings" methodName="validateBatchBookings" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="validateCruiseBooking-blank brand" id="0b02ef39-ef4c-464e-a468-ec06526beec3" mediaType="application/json" postQueryString="false">
      <con:settings>
        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="AppKey" value="${#Project#AppKey}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
      </con:settings>
      <con:request>{
   "header" : {
     "application": "${#TestCase#application}",
	"brand": "",
	"domainId": 6,
	"language": "en_us",
      "uuid" : "3d11ba67-e179-4d95-8adc-7e81eab2e538"
   },
   "cruiseBookingInfo" : {
      "bookingIds" : [
         "${Properties 1#BOOKINGID}",
         "",
         ""
      ]
   }
}</con:request>
      <con:originalUri>https://tst1-int.api.rccl.com/esl/booking/tst2/rest/v3/cruisecritic/validateBatchBookings</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="57037fc4-e83a-4cf3-8623-ed07c7d3dfe6" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7befa535-ee69-4d1f-bacf-42ce029fabd4" name="Match content of [status]"><con:configuration><path>$['header']['status']</path><content>"Failure"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f1493f77-49a7-4fea-9d21-55f83bd572c6" name="Match content of [code]"><con:configuration><path>$['header']['error'][0]['code']</path><content>"ESL_NotBlankConditional"</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" id="2a6f4104-ebbc-4527-ae1c-84dec13a7333" name="Contains"><con:configuration><token>Value is required for brandCode</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials>
        <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
        <con:authType>No Authorization</con:authType>
      </con:credentials>
      <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
      <con:parameters/>
    </con:restRequest></con:config></con:testStep><con:properties>
    <con:property>
      <con:name>application</con:name>
      <con:value>celebritycruises.com</con:value>
    </con:property>
    <con:property>
      <con:name>country</con:name>
      <con:value>USA</con:value>
    </con:property>
    <con:property>
      <con:name>currency</con:name>
      <con:value>USD</con:value>
    </con:property>
    <con:property>
      <con:name>language</con:name>
      <con:value>en_us</con:value>
    </con:property>
    <con:property>
      <con:name>packageCode</con:name>
      <con:value>INCRTSIP</con:value>
    </con:property>
    <con:property>
      <con:name>shipCode</con:name>
      <con:value>IN</con:value>
    </con:property>
    <con:property>
      <con:name>sailDate</con:name>
      <con:value>2023-06-21</con:value>
    </con:property>
    <con:property>
      <con:name>brand</con:name>
      <con:value>C</con:value>
    </con:property>
  </con:properties>
  <con:reportParameters/>
</con:testCase>