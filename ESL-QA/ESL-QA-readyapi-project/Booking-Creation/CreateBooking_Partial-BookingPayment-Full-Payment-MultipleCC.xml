<?xml version="1.0" encoding="UTF-8"?>
<con:testCase id="6919d8e6-29a8-4280-8c4f-0f9c2623ad03" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="CreateBooking_Partial-BookingPayment-Full Payment-MultipleCC" searchProperties="true" timeout="0" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="6919d8e6-29a8-4280-8c4f-0f9c2623ad03fileName">CreateBooking_Partial-BookingPayment-Full-Payment-MultipleCC</con:setting>
  </con:settings>
  <con:testStep type="restrequest" name="cruiseSearch" id="0570be00-1dfc-4501-b81b-3982e8c40367">
    <con:settings/>
    <con:config service="Cruise Search" methodName="cruiseSearch" resourcePath="/esl/search/rest/cruiseSearch" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="cruiseSearch" id="4b83a4b3-3cb3-4dac-ab4a-9f8353f23135" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:request/>
        <con:originalUri>http://eslaservicestst01.rccl.com/esl/search/rest/cruiseSearch</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="aeea0b73-a636-43f8-9e7e-592c253cb5c6" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="970f9f2a-b98c-4157-a7d0-bdb110cadbb3" name="Script Assertion">
          <con:configuration>
            <scriptText>def xmlRes = messageExchange.getResponse().contentAsString
def xmlSlurper = new groovy.xml.XmlSlurper();
def parse = xmlSlurper.parseText(xmlRes)
log.info parse


def totalHits = (parse.resultsSummary.totalHits.text()).toInteger()
log.info totalHits
assert totalHits!=0</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="qualifiers.qualifierScope" value="SEARCH_AND_PRICE"/>
          <con:entry key="header.language" value="en_us"/>
          <con:entry key="resultsPreference.includeOnlyIfPriceAvailable" value="true"/>
          <con:entry key="criteria.channel" value="VP"/>
          <con:entry key="qualifiers.offersType.strictPricingFlag" value="true"/>
          <con:entry key="qualifiers.priceScope" value="REQUESTED_AVAILABLE"/>
          <con:entry key="resultsPreference.includeResults" value="true"/>
          <con:entry key="criteria.currency" value="USD"/>
          <con:entry key="resultsPreference.strictSearch" value="true"/>
          <con:entry key="resultsPreference.priceLevel.bestPricedCategory" value="true"/>
          <con:entry key="resultsPreference.sortOrder" value="DESCENDING"/>
          <con:entry key="resultsPreference.includePrices" value="true"/>
          <con:entry key="resultsPreference.groupBy" value="PACKAGE"/>
          <con:entry key="criteria.bookingType" value="FIT"/>
          <con:entry key="resultsPreference.pagination.count" value="100"/>
          <con:entry key="header.domainId" value="1"/>
          <con:entry key="criteria.occupancy.adult" value="2"/>
          <con:entry key="resultsPreference.sortBy" value="DURATION"/>
        </con:parameters>
        <con:environmentSpec>
          <con:entry environmentId="c3a4b580-ecc4-4d69-9e64-f4e9abf07977">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Fetch_REQ_app/country/currency" id="43e64b42-bb9e-482a-a353-5659e959e6dc">
    <con:settings/>
    <con:config>
      <script>import java.io.*;
import java.util.*;
import com.eviware.soapui.model.testsuite.*;
import com.eviware.soapui.impl.wsdl.teststeps.assertions.*;
import org.apache.commons.lang3.StringUtils;


def ts = testRunner.testCase.getTestStepByName("cruiseSearch");
String  url =  ts.getHttpRequest().getResponse().getURL(); 
log.info(url)

String app = StringUtils.substringBetween(url, "header.application=", "&amp;");
log.info(app)
testRunner.testCase.setPropertyValue("application",app);


String country = StringUtils.substringBetween(url, "criteria.country=", "&amp;");
log.info(country)
testRunner.testCase.setPropertyValue("country",country);


String currency = StringUtils.substringBetween(url, "criteria.currency=", "&amp;");
log.info(currency)
testRunner.testCase.setPropertyValue("currency",currency);</script>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Fetch_RES_brand/ship/saildate/package" id="07b2dbb6-5da1-4d75-8e7b-c8a40a6ac902">
    <con:settings/>
    <con:config>
      <script>import java.io.*;
import java.util.*;
import com.eviware.soapui.model.testsuite.*;
import com.eviware.soapui.impl.wsdl.teststeps.assertions.*;


def ts = testRunner.testCase.getTestStepByName("cruiseSearch");
def res = new XmlSlurper().parseText(ts.getPropertyValue("ResponseAsXml"));

//Set Test Case Package Code
def packageCode = res.resultsByPackage.packageSummaryWithClassLevelPricing[0].packageReference.@code.text()
log.info(packageCode)
testRunner.testCase.setPropertyValue("packageCode",packageCode);


//Set Test Case Ship Code
def  shipCode= packageCode.substring(0,2);
log.info(shipCode)
testRunner.testCase.setPropertyValue("shipCode",shipCode);

//Set Test Case Sail Date
def sailDate = res.resultsByPackage.packageSummaryWithClassLevelPricing[0].cabinClassPriceBySailing[0].sailingRef.@saildate.text()
log.info(sailDate)
testRunner.testCase.setPropertyValue("sailDate",sailDate);

//Set Test Case Brand
def celebrityBrand = "C"
def royalBrand = "R"

def celebrityShips = ['AX', 'AT', 'BY', 'CS', 'EC', 'EG', 'EQ', 'FL', 'IN', 'ML', 'RF', 'SI', 'SL', 'SM', 'XP', 'XO']
def royalShips = ['AD', 'AL', 'AN', 'BR', 'NE', 'EN', 'EX', 'FR', 'GR', 'HM', 'IC', 'ID', 'JW', 'LB', 'MJ', 'MA', 'NV', 'NC', 'OA', 'OY', 'OV', 'QN', 'RD', 'RH', 'SR', 'SC', 'SY', 'WC', 'UT', 'VI', 'VY', 'WN']


if (celebrityShips.contains(shipCode)) {	
	testRunner.testCase.setPropertyValue("brand",celebrityBrand);
	} else {
		testRunner.testCase.setPropertyValue("brand",royalBrand);
		}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="retrieveStateroomCategories" id="a18ace83-c379-4480-a94f-d6fb4b72f5a0">
    <con:settings/>
    <con:config service="Booking" resourcePath="/rest/v3/retrieveStateroomCategories" methodName="retrieveStateroomCategories" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="retrieveStateroomCategories" id="747c2a9f-ae3a-46c4-9677-5fd3a653ba6b" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="AppKey" value="ZJCQR5Gf2v7I5zaz8jtOGGe3sbTXMcJp" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:request/>
        <con:originalUri>https://tst1-int.api.rccl.com/esl/booking/tst2/rest/v3/retrieveStateroomCategories</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="4fe118d3-5a63-4cd7-9401-f719263a1158" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="guestAge" value="25"/>
          <con:entry key="header.application" value="${#TestCase#application}"/>
          <con:entry key="guestAge[1]" value="50"/>
          <con:entry key="countryCode" value="${#TestCase#country}"/>
          <con:entry key="packageId" value="${#TestCase#packageCode}"/>
          <con:entry key="header.brand" value="${#TestCase#brand}"/>
          <con:entry key="sailDate" value="${#TestCase#sailDate}"/>
          <con:entry key="shipCode" value="${#TestCase#shipCode}"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>header.application</con:entry>
          <con:entry>header.brand</con:entry>
          <con:entry>countryCode</con:entry>
          <con:entry>shipCode</con:entry>
          <con:entry>sailDate</con:entry>
          <con:entry>packageId</con:entry>
          <con:entry>fareCode</con:entry>
          <con:entry>includeDeckInfo</con:entry>
          <con:entry>accessibleReqd</con:entry>
          <con:entry>seniorReqd</con:entry>
          <con:entry>militaryReqd</con:entry>
          <con:entry>policeReqd</con:entry>
          <con:entry>fireFighterReqd</con:entry>
          <con:entry>includeAllStaterooms</con:entry>
          <con:entry>guestAge</con:entry>
          <con:entry>guestAge[1]</con:entry>
        </con:parameterOrder>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Fetch_RES_categoryCode/fareCode/cruiseTotal" id="ea0fbb09-5711-4549-bfb8-0aa7ef358647">
    <con:settings/>
    <con:config>
      <script>import java.io.*;
import java.util.*;
import com.eviware.soapui.model.testsuite.*;
import com.eviware.soapui.impl.wsdl.teststeps.assertions.*;



def ts = testRunner.testCase.getTestStepByName("retrieveStateroomCategories");
def res = new XmlSlurper().parseText(ts.getPropertyValue("ResponseAsXml"));

//Set Test Case Fare Code
def fareCode = res.stateroomCategoryTypes.e[0].categories.e[0].selectedFareCode.text()
log.info(fareCode)
testRunner.testCase.setPropertyValue("fareCode",fareCode);

//Set Test Case Cruise Price
def netPrice = res.stateroomCategoryTypes.e[0].categories.e[0].netPrice.toDouble()
def guestCount = res.stateroomCategoryTypes.e[0].categories.e[0].guestPrices[0].guestPrice.e.size()
def taxes = res.stateroomCategoryTypes.e[0].categories.e[0].guestPrices[0].guestPrice.e[0].priceInfos.priceInfo.e[2].amount.toDouble()
def totalCruiseAmount = 500


log.info("Stateroom Price: "+netPrice.toString())
log.info("Guest Count: "+guestCount)
log.info("Taxes Fees: "+taxes)
log.info("Total Cruise Amount:  "+totalCruiseAmount)
testRunner.testCase.setPropertyValue("totalCruiseAmount",totalCruiseAmount.toString());

//Set Test Case Category Code
def categoryCode = res.stateroomCategoryTypes.e[0].categories.e[0].stateroomCategoryCode.text()
log.info(categoryCode)
testRunner.testCase.setPropertyValue("categoryCode",categoryCode);</script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="retrieveStateroomsForCategory" id="046a815a-1c28-48b8-ba0e-50845efcf842">
    <con:settings/>
    <con:config service="Booking" methodName="retrieveStateroomsForCategory" resourcePath="/rest/v3/retrieveStateroomsForCategory" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="retrieveStateroomsForCategory" id="0b4bcbf3-a807-4e6f-b760-0776798d5c9b" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="AppKey" value="ZJCQR5Gf2v7I5zaz8jtOGGe3sbTXMcJp" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:request/>
        <con:originalUri>https://tst1-int.api.rccl.com/esl/booking/tst2/rest/v3/retrieveStateroomsForCategory</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="b6a4a681-5221-448d-8703-953dfdcb461a" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="header.language" value="en_US"/>
          <con:entry key="header.application" value="${#TestCase#application}"/>
          <con:entry key="stateroomOccupancy.guestAge" value="25"/>
          <con:entry key="countryCode" value="${#TestCase#country}"/>
          <con:entry key="packageId" value="${#TestCase#packageCode}"/>
          <con:entry key="stateroomOccupancy.seniorReqd" value="false"/>
          <con:entry key="header.domainId" value="1"/>
          <con:entry key="currency" value="${#TestCase#currency}"/>
          <con:entry key="categoryCode" value="${#TestCase#categoryCode}"/>
          <con:entry key="sailDate" value="${#TestCase#sailDate}"/>
          <con:entry key="header.brand" value="${#TestCase#brand}"/>
          <con:entry key="shipCode" value="${#TestCase#shipCode}"/>
        </con:parameters>
        <con:environmentSpec>
          <con:entry environmentId="c3a4b580-ecc4-4d69-9e64-f4e9abf07977">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Fetch_RES_cabinNumber" id="fed3ee20-4d8d-4898-a3e0-82599008dfc8">
    <con:settings/>
    <con:config>
      <script>import java.io.*;
import java.util.*;
import com.eviware.soapui.model.testsuite.*;
import com.eviware.soapui.impl.wsdl.teststeps.assertions.*;



def ts = testRunner.testCase.getTestStepByName("retrieveStateroomsForCategory");
def res = new XmlSlurper().parseText(ts.getPropertyValue("ResponseAsXml"));

//Set Test Case Cabin Number
def cabinNumber = res.cabin.e[0].cabinNumber.text()
	if (cabinNumber==''){
		log.info(cabinNumber)
		def gty = 'GTY'
		log.info(gty)
		testRunner.testCase.setPropertyValue("cabinNumber",gty);
	} else {		
		testRunner.testCase.setPropertyValue("cabinNumber",cabinNumber);
		}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="bookingAddOns" id="e5ac60f7-4a35-4abf-804c-f2f424810202">
    <con:settings/>
    <con:config service="Booking" resourcePath="/rest/v3/bookingAddOns" methodName="bookingAddOns" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="bookingAddOns" id="4db884f5-b639-481e-95b7-29c7bb3c9b76" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="AppKey" value="ZJCQR5Gf2v7I5zaz8jtOGGe3sbTXMcJp" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:request/>
        <con:originalUri>https://tst1-int.api.rccl.com/esl/booking/tst2/rest/v3/bookingAddOns</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="4b86411f-ceac-45ad-ab98-d73d2c4aa027" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Simple Contains" id="cab0ebc3-7394-46b3-87aa-8b0c098e7528" name="Contains">
          <con:configuration>
            <token>Success</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>false</useRegEx>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="guestAge" value="25"/>
          <con:entry key="header.application" value="${#TestCase#application}"/>
          <con:entry key="returnInfo.specialServices" value="false"/>
          <con:entry key="countryCode" value="${#TestCase#country}"/>
          <con:entry key="packageId" value="${#TestCase#packageCode}"/>
          <con:entry key="currency" value="${#TestCase#currency}"/>
          <con:entry key="berthCategoryCd" value="${#TestCase#categoryCode}"/>
          <con:entry key="cabinNumber" value="${#TestCase#cabinNumber}"/>
          <con:entry key="header.brand" value="${#TestCase#brand}"/>
          <con:entry key="sailDate" value="${#TestCase#sailDate}"/>
          <con:entry key="shipCode" value="${#TestCase#shipCode}"/>
        </con:parameters>
        <con:environmentSpec>
          <con:entry environmentId="c3a4b580-ecc4-4d69-9e64-f4e9abf07977">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Fetch_RES_dining" id="b429e738-98c3-414f-91e1-087257fb25bf">
    <con:settings/>
    <con:config>
      <script>import java.io.*;
import java.util.*;
import com.eviware.soapui.model.testsuite.*;
import com.eviware.soapui.impl.wsdl.teststeps.assertions.*;



def ts = testRunner.testCase.getTestStepByName("bookingAddOns");
def res = new XmlSlurper().parseText(ts.getPropertyValue("ResponseAsXml"));

//Set Test Case Seating Code
def seatingCd  = res.diningOptions.openDining.dining.e[0].seatingCd.text()
log.info(seatingCd)
testRunner.testCase.setPropertyValue("seatingCd",seatingCd);


//Set Test Case Seating Time
def seatingTime  = res.diningOptions.openDining.dining.e[0].seatingTime.text()
log.info(seatingTime)
testRunner.testCase.setPropertyValue("seatingTime",seatingTime);</script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="createBooking" id="d2dd4802-191c-4abe-9830-2ac4f02f0943">
    <con:settings/>
    <con:config service="Booking" resourcePath="/rest/v3/createBooking" methodName="createBooking" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="createBooking" id="b409c4e8-2bd6-458c-a445-0c60531f6a15" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment>&lt;con:entry key="Content-type" value="application/json" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="AppKey" value="ZJCQR5Gf2v7I5zaz8jtOGGe3sbTXMcJp" xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></con:setting>
        </con:settings>
        <con:request>{
  "header": {
    "application": "${#TestCase#application}",
    "brand": "${#TestCase#brand}",
    "domainId": "1",
    "language": "en_US"
  },
  "countryCode": "${#TestCase#country}",
  "sailingInfo": {
    "shipCode": "${#TestCase#shipCode}",
    "sailDate": "${#TestCase#sailDate}",
    "packageCode": "${#TestCase#packageCode}",
    "currencyCode": "${#TestCase#currency}"
  },
  "reservations": [
    {
      "cabin": {
        "berthedCategoryCode": "${#TestCase#categoryCode}",
        "fareCode": "${#TestCase#fareCode}",
        "pricedCategoryCode": "${#TestCase#categoryCode}",
        "waitListed": "false",
        "accessible": "false",
        "number": "${#TestCase#cabinNumber}"
      },
      "dining": [
        {
          "sitting": "${#TestCase#seatingCd}",
          "sittingType": "OPEN",
          "sittingInstance": "${#TestCase#seatingTime}"
        }
      ],
      "gratuitiesPrepaid": "false",
      "insurance": {
        "code": "CRCR",
        "optionIndicator": "false"
      },
      "fareQualifiers": {
        "seniorReqd": "false",
        "militaryReqd": "false",
        "policeReqd": "false",
        "fireFighterReqd": "false"
      },
      "guestDetails": [
        {
          "guestContact": {
            "guestRefNumber": "0",
            "personalInfo": {
              "name": {
                "title": "MS",
                "firstName": "ESL One",
                "lastName": "Tester"
              },
              "age": "55",
              "birthDate": "1960-05-13",
              "gender": "F",
              "nationality": "USA"
            },
            "address": {
              "address1": "addr1",
              "city": "Miramar",
              "stateCode": "FL",
              "postalCode": "33029",
              "countryName": "USA"
            },
            "email": "eslqa@rccl.com"
          }
        },
        {
          "guestContact": {
            "guestRefNumber": "0",
            "personalInfo": {
              "name": {
                "title": "MR",
                "firstName": "ESL Two",
                "lastName": "Tester"
              },
              "age": "55",
              "birthDate": "1960-05-13",
              "gender": "M",
              "nationality": "USA"
            },
            "address": {
              "address1": "addr1",
              "city": "Miramar",
              "stateCode": "NA",
              "postalCode": "33029",
              "countryName": "USA"
            },
            "email": "eslqa@rccl.com"
          }
        }
      ],
      "listOfCardPayments": {
				"cardPayment": [
					{
						"cardType": "VA",
						"cardToken": "4387751111111111",
						"expireDate": "1230",
						"amount": "${#TestCase#totalCruiseAmount}",
						"currency": "USD",
						"extendPayments": "false",
						"contact": {
							"firstName": "ESL QA",
							"lastName": "Tester",
							"address": {
								"address1": "ADDRESS",
								"city": "CITY",
								"stateCode": "FLL",
								"postalCode": "33019",
								"countryCode": "USA",
								"countryName": "USA"
							}
						}
					}
				]
			}
    }
  ],
  "courtesyHold": "true"
}</con:request>
        <con:originalUri>https://tst1-int.api.rccl.com/esl/booking/tst2/rest/v3/createBooking</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="2246d26e-df78-4848-99de-da9397acacc5" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Simple Contains" name="Contains" id="e3249487-566e-4aaf-8773-341cb4b47fcb">
          <con:configuration>
            <token>Success</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>false</useRegEx>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="0d3b6e1f-409b-4e9f-817c-e7d957524669" name="Validate Booking ID not null">
          <con:configuration>
            <scriptText>def jsonRes = messageExchange.getResponse().contentAsString


def jsonSlurper = new groovy.json.JsonSlurper();
def parse = jsonSlurper.parseText(jsonRes)


def bookingId = parse.bookingConfirmation.bookingId
log.info bookingId
assert bookingId!=null</scriptText>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="23503b34-8d08-4776-a9b5-9fcebce53292" name="Validate Balance Due not null">
          <con:configuration>
            <scriptText>def jsonRes = messageExchange.getResponse().contentAsString


def jsonSlurper = new groovy.json.JsonSlurper();
def parse = jsonSlurper.parseText(jsonRes)


def balanceDue = parse.bookingConfirmation.balanceDue
log.info balanceDue
assert balanceDue!=0.00</scriptText>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="3c8685ee-1562-4316-ac6b-630daaf0ddff" name="Validate cardSuccess flag" disabled="true">
          <con:configuration>
            <scriptText>def jsonRes = messageExchange.getResponse().contentAsString


def jsonSlurper = new groovy.json.JsonSlurper();
def parse = jsonSlurper.parseText(jsonRes)


def count = parse.bookingConfirmation.paymentResult.size()
log.info count

for ( i=0;  i &lt;=count-1; i++){
	def cardSuccess = parse.bookingConfirmation.paymentResult[i].cardSuccess
	assert cardSuccess==true
	log.info cardSuccess
	}</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters/>
        <con:environmentSpec>
          <con:entry environmentId="c3a4b580-ecc4-4d69-9e64-f4e9abf07977">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Fetch_RES_lastname/booking/balanceDue" id="1cf88786-9082-4f55-9380-c332df74412b">
    <con:settings/>
    <con:config>
      <script>import java.io.*;
import java.util.*;
import com.eviware.soapui.model.testsuite.*;
import com.eviware.soapui.impl.wsdl.teststeps.assertions.*;
import groovy.json.*
import groovy.util.*


def ts = testRunner.testCase.getTestStepByName("createBooking");

def xml = new XmlSlurper().parseText(ts.getPropertyValue("ResponseAsXml"));
log.info(xml)

def json = new JsonSlurper().parseText(ts.getPropertyValue("RawRequest"));
log.info(json)


//Set Test Case Booking ID
def booking = xml.bookingConfirmation.bookingId.text()
log.info(booking)
testRunner.testCase.setPropertyValue("bookingId",booking);



//Set Test Case Balance Due
def balanceDue = xml.bookingConfirmation.balanceDue.toDouble()
def firstPayment = (balanceDue*0.40).round(2)
def secondPayment = (balanceDue-firstPayment).round(2)

log.info(balanceDue)
log.info(firstPayment)
log.info(secondPayment)
testRunner.testCase.setPropertyValue("firstPayment",firstPayment.toString());
testRunner.testCase.setPropertyValue("secondPayment",secondPayment.toString());



//Set Test Case lastName
def lastname = json.reservations[0].guestDetails[0].guestContact.personalInfo.name.lastName
log.info(lastname)
testRunner.testCase.setPropertyValue("lastname",lastname);</script>
    </con:config>
  </con:testStep>
  <con:testStep type="delay" name="Delay" id="92c1da82-10b8-49a0-9e41-67bd607155e3">
    <con:settings/>
    <con:config>
      <delay>5000</delay>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="bookingPayment" id="846669f8-5836-4eb5-a52a-d1dc35ac98d7">
    <con:settings/>
    <con:config service="Booking" resourcePath="/rest/v3/bookingPayment" methodName="bookingPayment" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="bookingPayment" id="d2be06a4-8d6d-4d9e-8c52-3355433c2a16" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="AppKey" value="${#Project#AppKey}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:request>{
	"header": {
		"application": "${#TestCase#application}",
		"brand": "${#TestCase#brand}",
		"domainId": "1",
		"language": "en_US"
	},
	"countryCode": "${#TestCase#country}",
	"bookingId": "${#TestCase#bookingId}",
	"lastName": "${#TestCase#lastname}",
	"shipCode": "${#TestCase#shipCode}",
	"sailDate": "${#TestCase#sailDate}",
	"lockBooking": false,
	"listOfCardPayments": {
		"cardPayment": [
			{
				"cardType": "VA",
				"cardToken": "4387751111111111",
				"expireDate": "1030",
				"cvv": "123",
				"amount": "${#TestCase#firstPayment}",
				"currency": "${#TestCase#currency}",
				"contact": {
					"firstName": "ESL One",
					"lastName": "${#TestCase#lastname}"
				}
			},
			{
				"cardType": "MC",
				"cardToken": "5442981111111114 ",
				"expireDate": "1030",
				"cvv": "123",
				"amount": "${#TestCase#secondPayment}",
				"currency": "${#TestCase#currency}",
				"contact": {
					"firstName": "ESL One",
					"lastName": "${#TestCase#lastname}"
				}
			}
		]
	}
}</con:request>
        <con:originalUri>https://tst1-int.api.rccl.com/esl/booking/tst2/rest/v3/bookingPayment</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="189ffff1-17eb-452e-a5bd-3d53a6e2e821" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="04dc8f5f-90c2-4a0e-b80d-e33f3de1f1a8" name="Validate no balance due">
          <con:configuration>
            <scriptText>def jsonRes = messageExchange.getResponse().contentAsString


def jsonSlurper = new groovy.json.JsonSlurper();
def parse = jsonSlurper.parseText(jsonRes)


def balanceDue = parse.bookingConfirmation.balanceDue
log.info balanceDue
assert balanceDue==0.00</scriptText>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="aba8e0b5-bce2-42c2-9065-11297e98683c" name="Validate cardSuccess flag" disabled="true">
          <con:configuration>
            <scriptText>def jsonRes = messageExchange.getResponse().contentAsString


def jsonSlurper = new groovy.json.JsonSlurper();
def parse = jsonSlurper.parseText(jsonRes)


def count = parse.bookingConfirmation.paymentResult.size()
log.info count

for ( i=0;  i &lt;=count-1; i++){
	def cardSuccess = parse.bookingConfirmation.paymentResult[i].cardSuccess
	assert cardSuccess==true
	log.info cardSuccess
	}</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="delay" name="Delay 2" id="ab0a5a99-9b88-4e58-b5bb-7c89d1cd2d67">
    <con:settings/>
    <con:config>
      <delay>5000</delay>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="retrieveBooking" id="506b4864-d6ea-4ca4-bdbc-01b02a601f41">
    <con:settings/>
    <con:config service="Booking" methodName="retrieveBooking" resourcePath="/rest/v3/retrieveBooking" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="retrieveBooking" id="5233383c-3985-4305-ab02-2225af0d0e20" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="AppKey" value="bjnm9J1yJjsQQLqQ8H1ffKtDAv3kQohG" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:request/>
        <con:originalUri>https://tst1-int.api.rccl.com/esl/booking/tst2/rest/v3/retrieveBooking</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="aa751c95-8f3c-46fc-b1a0-39d195e9727d" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Simple Contains" name="Contains" id="836cc23a-febd-410e-a3d5-c136bb4303e9">
          <con:configuration>
            <token>Success</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>false</useRegEx>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="8d2c2110-d9ab-4d1b-9a6e-cbe94da21f3a" name="Validate accessToken is not null">
          <con:configuration>
            <scriptText>def jsonRes = messageExchange.getResponse().contentAsString


def jsonSlurper = new groovy.json.JsonSlurper();
def parse = jsonSlurper.parseText(jsonRes)


def token = parse.bookingAccessToken
log.info token
assert token!=null</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="lastName" value="${#TestCase#lastname}"/>
          <con:entry key="header.language" value="en_US"/>
          <con:entry key="header.application" value="${#TestCase#application}"/>
          <con:entry key="countryCode" value="${#TestCase#country}"/>
          <con:entry key="header.domainId" value="1"/>
          <con:entry key="summaryRequested" value="FALSE"/>
          <con:entry key="header.brand" value="${#TestCase#brand}"/>
          <con:entry key="sailDate" value="${#TestCase#sailDate}"/>
          <con:entry key="bookingId" value="${#TestCase#bookingId}"/>
          <con:entry key="shipCode" value="${#TestCase#shipCode}"/>
        </con:parameters>
        <con:environmentSpec>
          <con:entry environmentId="c3a4b580-ecc4-4d69-9e64-f4e9abf07977">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Fetch_RES_bookingAccessToken" id="ac87ee21-c567-461b-81c6-6052bd97ac68">
    <con:settings/>
    <con:config>
      <script>import java.io.*;
import java.util.*;
import com.eviware.soapui.model.testsuite.*;
import com.eviware.soapui.impl.wsdl.teststeps.assertions.*;
import groovy.json.*
import groovy.util.*


def ts = testRunner.testCase.getTestStepByName("retrieveBooking");

def xml = new XmlSlurper().parseText(ts.getPropertyValue("ResponseAsXml"));
log.info(xml)


//Set Test Case bookingAccessToken
def bookingAccessToken  = xml.bookingAccessToken.text()
log.info(bookingAccessToken)
testRunner.testCase.setPropertyValue("bookingAccessToken",bookingAccessToken);</script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="cancelBooking" id="33165f72-a37b-4c0b-9665-29c78cebb74f">
    <con:settings/>
    <con:config service="Booking" resourcePath="/rest/v3/cancelBooking" methodName="cancelBooking" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="cancelBooking" id="f837f382-acaf-4ca4-9a9d-cf578dea2250" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment>&lt;con:entry key="Content-type" value="application/json" xmlns:con="http://eviware.com/soapui/config"/>&lt;con:entry key="AppKey" value="ZJCQR5Gf2v7I5zaz8jtOGGe3sbTXMcJp" xmlns:con="http://eviware.com/soapui/config"/>&lt;/xml-fragment></con:setting>
        </con:settings>
        <con:request>{
	"header": {
		"application": "${#TestCase#application}",
		"brand": "${#TestCase#brand}",
		"domainId": "1",
		"language": "en_US"
	},
	"countryCode":"${#TestCase#country}",
	"bookingId": "${#TestCase#bookingId}",
	"bookingAccessToken": "${#TestCase#bookingAccessToken}",
	"lockBooking": "true"
}</con:request>
        <con:originalUri>https://tst1-int.api.rccl.com/esl/booking/tst2/rest/v3/cancelBooking</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="611ff00c-818e-4e37-9a53-fa644d71dbca" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Simple Contains" id="6c7185ef-da23-4158-88d1-04dd5777c26d" name="Contains">
          <con:configuration>
            <token>Success</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>false</useRegEx>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters/>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:properties>
    <con:property>
      <con:name>PackageCode</con:name>
      <con:value>ML07D314</con:value>
    </con:property>
    <con:property>
      <con:name>TestShip</con:name>
      <con:value>AX</con:value>
    </con:property>
    <con:property>
      <con:name>shipCode</con:name>
      <con:value>ML</con:value>
    </con:property>
    <con:property>
      <con:name>sailDate</con:name>
      <con:value>2023-02-11</con:value>
    </con:property>
    <con:property>
      <con:name>brand</con:name>
      <con:value>C</con:value>
    </con:property>
    <con:property>
      <con:name>fareCode</con:name>
      <con:value>I1773897</con:value>
    </con:property>
    <con:property>
      <con:name>categoryCode</con:name>
      <con:value>12</con:value>
    </con:property>
    <con:property>
      <con:name>cabinNumber</con:name>
      <con:value>GTY</con:value>
    </con:property>
    <con:property>
      <con:name>seatingCd</con:name>
      <con:value>O</con:value>
    </con:property>
    <con:property>
      <con:name>seatingTime</con:name>
      <con:value>CEL SLCT</con:value>
    </con:property>
    <con:property>
      <con:name>application</con:name>
      <con:value>celebritycruises.com</con:value>
    </con:property>
    <con:property>
      <con:name>country</con:name>
      <con:value>USA</con:value>
    </con:property>
    <con:property>
      <con:name>currency</con:name>
      <con:value>USD</con:value>
    </con:property>
    <con:property>
      <con:name>bookingID</con:name>
      <con:value>1414775</con:value>
    </con:property>
    <con:property>
      <con:name>lastname</con:name>
      <con:value>Tester</con:value>
    </con:property>
    <con:property>
      <con:name>bookingAccessToken</con:name>
      <con:value>afd3abad-bae9-433e-b9db-bbc5b4b1c033</con:value>
    </con:property>
    <con:property>
      <con:name>stateroomPrice</con:name>
      <con:value>1140.0</con:value>
    </con:property>
    <con:property>
      <con:name>totalCruiseAmountString</con:name>
      <con:value>1370.36</con:value>
    </con:property>
    <con:property>
      <con:name>totalCruiseAmount</con:name>
      <con:value>500</con:value>
    </con:property>
    <con:property>
      <con:name>balanceDue</con:name>
      <con:value>870.36</con:value>
    </con:property>
    <con:property>
      <con:name>firstPayment</con:name>
      <con:value>336.14</con:value>
    </con:property>
    <con:property>
      <con:name>secondPayment</con:name>
      <con:value>504.22</con:value>
    </con:property>
  </con:properties>
  <con:reportParameters/>
  <con:environmentSpec>
    <con:entry environmentId="c3a4b580-ecc4-4d69-9e64-f4e9abf07977">
      <con:authProfile>Inherit From Parent</con:authProfile>
    </con:entry>
  </con:environmentSpec>
  <con:tagId>7f524615-2a12-44eb-b907-7930ce6ab200</con:tagId>
</con:testCase>
