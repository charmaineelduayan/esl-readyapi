<?xml version="1.0" encoding="UTF-8"?>
<con:testCase id="ceccb875-b0b3-4ef4-bd80-9a2ef627a4dd" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="Test2-N-RetrieveHotelContent" searchProperties="true" timeout="0" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="ceccb875-b0b3-4ef4-bd80-9a2ef627a4ddfileName">Test2-N-RetrieveHotelContent</con:setting>
  </con:settings>
  <con:testStep type="properties" name="Properties" id="fe4468fc-e1eb-4d8c-a130-2cbbe728e2c9">
    <con:settings/>
    <con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:properties>
        <con:property>
          <con:name>hotelCode</con:name>
          <con:value/>
        </con:property>
        <con:property>
          <con:name>CruiseFlag</con:name>
          <con:value/>
        </con:property>
      </con:properties>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="cruiseSearch" id="e4c0273a-b844-4a9b-a762-ae0c6a60985f">
    <con:settings/>
    <con:config service="Cruise Search" methodName="cruiseSearch" resourcePath="/esl/search/rest/cruiseSearch" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="cruiseSearch" id="4b83a4b3-3cb3-4dac-ab4a-9f8353f23135" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:request/>
        <con:originalUri>http://eslaservicestst01.rccl.com/esl/search/rest/cruiseSearch</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="aeea0b73-a636-43f8-9e7e-592c253cb5c6" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="970f9f2a-b98c-4157-a7d0-bdb110cadbb3" name="Script Assertion">
          <con:configuration>
            <scriptText>def xmlRes = messageExchange.getResponse().contentAsString
def xmlSlurper = new groovy.xml.XmlSlurper();
def parse = xmlSlurper.parseText(xmlRes)
log.info parse


def totalHits = (parse.resultsSummary.totalHits.text()).toInteger()
log.info totalHits
assert totalHits!=0</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="qualifiers.qualifierScope" value="SEARCH_AND_PRICE"/>
          <con:entry key="header.language" value="en_us"/>
          <con:entry key="criteria.brand.value" value="R"/>
          <con:entry key="header.application" value="royalcaribbean.com"/>
          <con:entry key="resultsPreference.includeOnlyIfPriceAvailable" value="true"/>
          <con:entry key="criteria.channel" value="VP"/>
          <con:entry key="qualifiers.offersType.strictPricingFlag" value="true"/>
          <con:entry key="qualifiers.priceScope" value="REQUESTED_AVAILABLE"/>
          <con:entry key="resultsPreference.includeResults" value="true"/>
          <con:entry key="criteria.currency" value="USD"/>
          <con:entry key="resultsPreference.strictSearch" value="true"/>
          <con:entry key="criteria.ship.value" value="${#Global#royalShip}"/>
          <con:entry key="resultsPreference.priceLevel.bestPricedCategory" value="true"/>
          <con:entry key="criteria.sailingDate.dateRange.from" value="${#Global#dateRangeFrom}"/>
          <con:entry key="criteria.sailingDate.date" value=""/>
          <con:entry key="resultsPreference.sortOrder" value="DESCENDING"/>
          <con:entry key="resultsPreference.includePrices" value="true"/>
          <con:entry key="resultsPreference.groupBy" value="PACKAGE"/>
          <con:entry key="criteria.bookingType" value="FIT"/>
          <con:entry key="resultsPreference.pagination.count" value="100"/>
          <con:entry key="header.domainId" value="1"/>
          <con:entry key="criteria.occupancy.adult" value="2"/>
          <con:entry key="resultsPreference.sortBy" value="DURATION"/>
          <con:entry key="criteria.sailingDate.dateRange.to" value="${#Global#dateRangeTo}"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>criteria.channel</con:entry>
          <con:entry>criteria.bookingType</con:entry>
          <con:entry>header.domainId</con:entry>
          <con:entry>header.language</con:entry>
          <con:entry>header.application</con:entry>
          <con:entry>criteria.brand.value</con:entry>
          <con:entry>criteria.ship.value</con:entry>
          <con:entry>criteria.cruiseType.value</con:entry>
          <con:entry>criteria.office</con:entry>
          <con:entry>criteria.country</con:entry>
          <con:entry>criteria.currency</con:entry>
          <con:entry>criteria.occupancy.adult</con:entry>
          <con:entry>resultsPreference.pagination.offset</con:entry>
          <con:entry>resultsPreference.pagination.count</con:entry>
          <con:entry>resultsPreference.strictSearch</con:entry>
          <con:entry>resultsPreference.sortBy</con:entry>
          <con:entry>resultsPreference.sortOrder</con:entry>
          <con:entry>resultsPreference.groupBy</con:entry>
          <con:entry>resultsPreference.includeResults</con:entry>
          <con:entry>resultsPreference.includeOnlyIfPriceAvailable</con:entry>
          <con:entry>resultsPreference.priceLevel.bestPricedCategory</con:entry>
          <con:entry>resultsPreference.includePrices</con:entry>
          <con:entry>qualifiers.priceScope</con:entry>
          <con:entry>qualifiers.qualifierScope</con:entry>
          <con:entry>qualifiers.offersType.strictPricingFlag</con:entry>
          <con:entry>qualifiers.itineraryGroup.value</con:entry>
          <con:entry>criteria.sailingDate.dateRange.from</con:entry>
          <con:entry>criteria.sailingDate.dateRange.to</con:entry>
          <con:entry>criteria.sailingDate.date</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="c3a4b580-ecc4-4d69-9e64-f4e9abf07977">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="1c5befc7-2431-43ac-871b-0634d210ea0b">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="40616221-3f9c-4753-b281-39f5bafc4e2c">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Fetch_REQ_app/country/currency" id="ef741481-563b-42f6-bddf-784d97681989">
    <con:settings/>
    <con:config>
      <script>import java.io.*;
import java.util.*;
import com.eviware.soapui.model.testsuite.*;
import com.eviware.soapui.impl.wsdl.teststeps.assertions.*;
import org.apache.commons.lang3.StringUtils;


def ts = testRunner.testCase.getTestStepByName("cruiseSearch");
String  url =  ts.getHttpRequest().getResponse().getURL(); 
log.info(url)

String app = StringUtils.substringBetween(url, "header.application=", "&amp;");
log.info(app)
testRunner.testCase.setPropertyValue("application",app);


String country = StringUtils.substringBetween(url, "criteria.country=", "&amp;");
log.info(country)
testRunner.testCase.setPropertyValue("country",country);


String currency = StringUtils.substringBetween(url, "criteria.currency=", "&amp;");
log.info(currency)
testRunner.testCase.setPropertyValue("currency",currency);

String language = StringUtils.substringBetween(url, "header.language=", "&amp;");
log.info(language)
testRunner.testCase.setPropertyValue("language",language);</script>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Fetch_RES_brand/ship/saildate/package" id="dba6aa86-4a0d-4b41-bc04-e21d3a2037a8">
    <con:settings/>
    <con:config>
      <script>import java.io.*;
import java.util.*;
import com.eviware.soapui.model.testsuite.*;
import com.eviware.soapui.impl.wsdl.teststeps.assertions.*;


def ts = testRunner.testCase.getTestStepByName("cruiseSearch");
def res = new XmlSlurper().parseText(ts.getPropertyValue("ResponseAsXml"));

//Set Test Case Package Code
def packageCode = res.resultsByPackage.packageSummaryWithClassLevelPricing[0].packageReference.@code.text()
log.info(packageCode)
testRunner.testCase.setPropertyValue("packageCode",packageCode);


//Set Test Case Ship Code
def  shipCode= packageCode.substring(0,2);
log.info(shipCode)
testRunner.testCase.setPropertyValue("shipCode",shipCode);

//Set Test Case Sail Date
def sailDate = res.resultsByPackage.packageSummaryWithClassLevelPricing[0].cabinClassPriceBySailing[0].sailingRef.@saildate.text()
log.info(sailDate)
testRunner.testCase.setPropertyValue("sailDate",sailDate);

//Set Test Case Brand
def celebrityBrand = "C"
def royalBrand = "R"

def celebrityShips = ['AX', 'AT', 'BY', 'CS', 'EC', 'EG', 'EQ', 'FL', 'IN', 'ML', 'RF', 'SI', 'SL', 'SM', 'XP', 'XO']
def royalShips = ['AD', 'AL', 'AN', 'BR', 'NE', 'EN', 'EX', 'FR', 'GR', 'HM', 'IC', 'ID', 'JW', 'LB', 'MJ', 'MA', 'NV', 'NC', 'OA', 'OY', 'OV', 'QN', 'RD', 'RH', 'SR', 'SC', 'SY', 'WC', 'UT', 'VI', 'VY', 'WN']


if (celebrityShips.contains(shipCode)) {	
	testRunner.testCase.setPropertyValue("brand",celebrityBrand);
	} else {
		testRunner.testCase.setPropertyValue("brand",royalBrand);
		}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="RetrieveHotels" id="0127f23a-329f-433c-9260-e5c3bb9a1bbf">
    <con:settings/>
    <con:config service="Booking" resourcePath="/rest/v3//hotels" methodName="hotels" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="RetrieveHotels" id="840d5810-c5da-46dc-9644-501976904e21" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="AppKey" value="${#Project#AppKey}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:request><![CDATA[https://tst1-int.api.rccl.com/esl/booking/tst2/rest/v3//hotels?header.application=royalcaribbean.com&header.brand=R&header.domainId=1&header.language=en_us&countryCode=USA&agencyId=&sailing.shipCode=AL&sailing.sailDate=2023-06-04&guests.guest%5B0%5D.age=24&guests.guest%5B0%5D.transportation.airportCityCode=C%2FO&guests.guest%5B0%5D.transportation.CityName=&guests.guest%5B0%5D.transportation.status=CONFIRMED_TICKET_NOT_ISSUED]]></con:request>
        <con:originalUri>https://tst1-int.api.rccl.com/esl/booking/tst2/rest/v3/hotels</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="2db64d64-8529-4e8e-89e5-c4bc9567bd3f" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Simple Contains" id="9373956f-f668-4ab8-adfb-c4683f5ae586" name="Contains">
          <con:configuration>
            <token>Hotel</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>false</useRegEx>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="714fdb59-bc5c-4fa4-97bc-5652e13893d6" name="Script Assertion">
          <con:configuration>
            <scriptText>import java.io.*;
import java.util.*;
import com.eviware.soapui.impl.support.http.HttpRequestTestStep

def rawRequest = new String(messageExchange.getRawRequestData(), "UTF-8")
def rawrequest1 = rawRequest.indexOf("GET")+4;
def rawrequest2 = rawRequest.indexOf("HTTP")
def url = rawRequest.substring(rawrequest1,rawrequest2)

messageExchange.modelItem.testStep.setPropertyValue("Request", url)</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="guests.guest[0].transportation.airportCityCode" value="C/O"/>
          <con:entry key="header.language" value="${#TestCase#language}"/>
          <con:entry key="header.application" value="${#TestCase#application}"/>
          <con:entry key="guests.guest[0].age" value="24"/>
          <con:entry key="countryCode" value="${#TestCase#country}"/>
          <con:entry key="guests.guest[0].transportation.status" value="CONFIRMED_TICKET_NOT_ISSUED"/>
          <con:entry key="sailing.sailDate" value="${#TestCase#sailDate}"/>
          <con:entry key="header.domainId" value="1"/>
          <con:entry key="header.brand" value="${#TestCase#brand}"/>
          <con:entry key="sailing.shipCode" value="${#TestCase#shipCode}"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>header.application</con:entry>
          <con:entry>header.brand</con:entry>
          <con:entry>header.domainId</con:entry>
          <con:entry>header.language</con:entry>
          <con:entry>countryCode</con:entry>
          <con:entry>agencyId</con:entry>
          <con:entry>sailing.shipCode</con:entry>
          <con:entry>sailing.sailDate</con:entry>
          <con:entry>guests.guest[0].age</con:entry>
          <con:entry>guests.guest[0].transportation.airportCityCode</con:entry>
          <con:entry>guests.guest[0].transportation.CityName</con:entry>
          <con:entry>guests.guest[0].transportation.status</con:entry>
        </con:parameterOrder>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Property Transfer" id="5a571703-8ad9-4f92-8c9f-da0420339791">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>CruiseFlag</con:name>
        <con:sourceType>ResponseAsXml</con:sourceType>
        <con:sourceStep>RetrieveHotels</con:sourceStep>
        <con:sourcePath>$['hotelList']['hotel'][0]['cruiseTourType']</con:sourcePath>
        <con:targetType>CruiseFlag</con:targetType>
        <con:targetStep>Properties</con:targetStep>
        <con:type>JSONPATH</con:type>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>hotelCode</con:name>
        <con:sourceType>ResponseAsXml</con:sourceType>
        <con:sourceStep>RetrieveHotels</con:sourceStep>
        <con:sourcePath>$['hotelList']['hotel'][0]['code']</con:sourcePath>
        <con:targetType>hotelCode</con:targetType>
        <con:targetStep>Properties</con:targetStep>
        <con:type>JSONPATH</con:type>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="RetrieveHotelContent_bad brand" id="fab91985-d561-4cc7-a5d3-47b02caec70b">
    <con:settings/>
    <con:config service="ContentOperations" resourcePath="/hotelContent" methodName="hotelContent" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="RetrieveHotelContent_bad brand" id="dc9ef991-1a75-4318-826c-9b8a2b9dd645" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="AppKey" value="${#Project#AppKey}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:request/>
        <con:originalUri>https://tst1-int.api.rccl.com/esl/content/tst2/rest/v3/hotelContent</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="b1be0f18-c30c-4e33-b159-39bb43d0521a" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Simple Contains" id="f70dcfb5-d214-442c-9534-e4a2a2df7dee" name="Contains">
          <con:configuration>
            <token>Failure</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>false</useRegEx>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Simple Contains" id="25290121-3fc7-41d2-806b-375e76872a4e" name="Contains 2">
          <con:configuration>
            <token>CATL-005</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>false</useRegEx>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="arrivalPortCode" value="MIA"/>
          <con:entry key="header.language" value="${#TestCase#language}"/>
          <con:entry key="destinationCode" value="BAHAM"/>
          <con:entry key="header.application" value="${#TestCase#application}"/>
          <con:entry key="hotelCriteria.prePostCruiseFlag" value="${Properties#CruiseFlag}"/>
          <con:entry key="header.domainId" value="1"/>
          <con:entry key="hotelCriteria.hotelCode" value="${Properties#hotelCode}"/>
          <con:entry key="header.brand" value="RR"/>
          <con:entry key="departurePortCode" value="MIA"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>header.application</con:entry>
          <con:entry>header.brand</con:entry>
          <con:entry>header.domainId</con:entry>
          <con:entry>header.language</con:entry>
          <con:entry>departurePortCode</con:entry>
          <con:entry>arrivalPortCode</con:entry>
          <con:entry>destinationCode</con:entry>
          <con:entry>hotelCriteria.hotelCode</con:entry>
          <con:entry>hotelCriteria.prePostCruiseFlag</con:entry>
        </con:parameterOrder>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="RetrieveHotelContent_blank DestinationCode" id="51071349-68b1-41a5-82db-b41e4799136c">
    <con:settings/>
    <con:config service="ContentOperations" resourcePath="/hotelContent" methodName="hotelContent" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="RetrieveHotelContent_blank DestinationCode" id="dc9ef991-1a75-4318-826c-9b8a2b9dd645" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="AppKey" value="${#Project#AppKey}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:request/>
        <con:originalUri>https://tst1-int.api.rccl.com/esl/content/tst2/rest/v3/hotelContent</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="b1be0f18-c30c-4e33-b159-39bb43d0521a" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Simple Contains" id="f70dcfb5-d214-442c-9534-e4a2a2df7dee" name="Contains">
          <con:configuration>
            <token>Failure</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>false</useRegEx>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Simple Contains" id="25290121-3fc7-41d2-806b-375e76872a4e" name="Contains [code]">
          <con:configuration>
            <token>NotBlank</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>false</useRegEx>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Simple Contains" id="3d954175-7584-4a6a-9441-f58ef9a6bf2f" name="Contains [code2]">
          <con:configuration>
            <token>unknownError</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>false</useRegEx>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="arrivalPortCode" value="MIA"/>
          <con:entry key="header.language" value="${#TestCase#language}"/>
          <con:entry key="header.application" value="${#TestCase#application}"/>
          <con:entry key="hotelCriteria.prePostCruiseFlag" value="${Properties#CruiseFlag}"/>
          <con:entry key="header.domainId" value="1"/>
          <con:entry key="hotelCriteria.hotelCode" value="${Properties#hotelCode}"/>
          <con:entry key="header.brand" value="${#TestCase#brand}"/>
          <con:entry key="departurePortCode" value="MIA"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>header.application</con:entry>
          <con:entry>header.brand</con:entry>
          <con:entry>header.domainId</con:entry>
          <con:entry>header.language</con:entry>
          <con:entry>departurePortCode</con:entry>
          <con:entry>arrivalPortCode</con:entry>
          <con:entry>destinationCode</con:entry>
          <con:entry>hotelCriteria.hotelCode</con:entry>
          <con:entry>hotelCriteria.prePostCruiseFlag</con:entry>
        </con:parameterOrder>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:properties>
    <con:property>
      <con:name>application</con:name>
      <con:value>royalcaribbean.com</con:value>
    </con:property>
    <con:property>
      <con:name>country</con:name>
      <con:value>USA</con:value>
    </con:property>
    <con:property>
      <con:name>currency</con:name>
      <con:value>USD</con:value>
    </con:property>
    <con:property>
      <con:name>language</con:name>
      <con:value>en_us</con:value>
    </con:property>
    <con:property>
      <con:name>packageCode</con:name>
      <con:value>ALALTST2</con:value>
    </con:property>
    <con:property>
      <con:name>shipCode</con:name>
      <con:value>AL</con:value>
    </con:property>
    <con:property>
      <con:name>sailDate</con:name>
      <con:value>2023-06-04</con:value>
    </con:property>
    <con:property>
      <con:name>brand</con:name>
      <con:value>R</con:value>
    </con:property>
  </con:properties>
  <con:reportParameters/>
</con:testCase>
