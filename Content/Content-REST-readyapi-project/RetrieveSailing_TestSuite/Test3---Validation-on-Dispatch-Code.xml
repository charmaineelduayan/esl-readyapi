<?xml version="1.0" encoding="UTF-8"?>
<con:testCase id="b28a893b-b628-4d4b-a0c8-4f06cb90e6f1" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="Test3 - Validation on Dispatch Code" searchProperties="true" timeout="0" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="b28a893b-b628-4d4b-a0c8-4f06cb90e6f1fileName">Test3---Validation-on-Dispatch-Code</con:setting>
  </con:settings>
  <con:testStep type="restrequest" name="cruiseSearch-ROYAL" id="7966c433-0858-47cb-85cc-578245450dc6">
    <con:settings/>
    <con:config service="Cruise Search" methodName="cruiseSearch" resourcePath="/esl/search/rest/cruiseSearch" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="cruiseSearch-ROYAL" id="4b83a4b3-3cb3-4dac-ab4a-9f8353f23135" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:request/>
        <con:originalUri>http://eslaservicestst01.rccl.com/esl/search/rest/cruiseSearch</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="aeea0b73-a636-43f8-9e7e-592c253cb5c6" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="970f9f2a-b98c-4157-a7d0-bdb110cadbb3" name="Script Assertion">
          <con:configuration>
            <scriptText>def xmlRes = messageExchange.getResponse().contentAsString
def xmlSlurper = new groovy.xml.XmlSlurper();
def parse = xmlSlurper.parseText(xmlRes)
log.info parse


def totalHits = (parse.resultsSummary.totalHits.text()).toInteger()
log.info totalHits
assert totalHits!=0</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="qualifiers.qualifierScope" value="SEARCH_AND_PRICE"/>
          <con:entry key="header.language" value="en_us"/>
          <con:entry key="criteria.brand.value" value="R"/>
          <con:entry key="header.application" value="royalcaribbean.com"/>
          <con:entry key="resultsPreference.includeOnlyIfPriceAvailable" value="true"/>
          <con:entry key="criteria.channel" value="VP"/>
          <con:entry key="qualifiers.offersType.strictPricingFlag" value="true"/>
          <con:entry key="qualifiers.priceScope" value="REQUESTED_AVAILABLE"/>
          <con:entry key="resultsPreference.includeResults" value="true"/>
          <con:entry key="criteria.currency" value="USD"/>
          <con:entry key="resultsPreference.strictSearch" value="true"/>
          <con:entry key="criteria.ship.value" value="${#Global#royalShip}"/>
          <con:entry key="resultsPreference.priceLevel.bestPricedCategory" value="true"/>
          <con:entry key="criteria.sailingDate.dateRange.from" value="${#Global#dateRangeFrom}"/>
          <con:entry key="criteria.sailingDate.date" value=""/>
          <con:entry key="resultsPreference.sortOrder" value="DESCENDING"/>
          <con:entry key="resultsPreference.includePrices" value="true"/>
          <con:entry key="resultsPreference.groupBy" value="PACKAGE"/>
          <con:entry key="criteria.bookingType" value="FIT"/>
          <con:entry key="resultsPreference.pagination.count" value="100"/>
          <con:entry key="header.domainId" value="1"/>
          <con:entry key="criteria.occupancy.adult" value="2"/>
          <con:entry key="resultsPreference.sortBy" value="DURATION"/>
          <con:entry key="criteria.sailingDate.dateRange.to" value="${#Global#dateRangeTo}"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>criteria.channel</con:entry>
          <con:entry>criteria.bookingType</con:entry>
          <con:entry>header.domainId</con:entry>
          <con:entry>header.language</con:entry>
          <con:entry>header.application</con:entry>
          <con:entry>criteria.brand.value</con:entry>
          <con:entry>criteria.ship.value</con:entry>
          <con:entry>criteria.cruiseType.value</con:entry>
          <con:entry>criteria.office</con:entry>
          <con:entry>criteria.country</con:entry>
          <con:entry>criteria.currency</con:entry>
          <con:entry>criteria.occupancy.adult</con:entry>
          <con:entry>resultsPreference.pagination.offset</con:entry>
          <con:entry>resultsPreference.pagination.count</con:entry>
          <con:entry>resultsPreference.strictSearch</con:entry>
          <con:entry>resultsPreference.sortBy</con:entry>
          <con:entry>resultsPreference.sortOrder</con:entry>
          <con:entry>resultsPreference.groupBy</con:entry>
          <con:entry>resultsPreference.includeResults</con:entry>
          <con:entry>resultsPreference.includeOnlyIfPriceAvailable</con:entry>
          <con:entry>resultsPreference.priceLevel.bestPricedCategory</con:entry>
          <con:entry>resultsPreference.includePrices</con:entry>
          <con:entry>qualifiers.priceScope</con:entry>
          <con:entry>qualifiers.qualifierScope</con:entry>
          <con:entry>qualifiers.offersType.strictPricingFlag</con:entry>
          <con:entry>qualifiers.itineraryGroup.value</con:entry>
          <con:entry>criteria.sailingDate.dateRange.from</con:entry>
          <con:entry>criteria.sailingDate.dateRange.to</con:entry>
          <con:entry>criteria.sailingDate.date</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="c3a4b580-ecc4-4d69-9e64-f4e9abf07977">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="1c5befc7-2431-43ac-871b-0634d210ea0b">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="40616221-3f9c-4753-b281-39f5bafc4e2c">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Fetch_REQ_app/country/currency" id="1c8335d5-57a1-4c4b-9b80-debe145ced2b">
    <con:settings/>
    <con:config>
      <script>import java.io.*;
import java.util.*;
import com.eviware.soapui.model.testsuite.*;
import com.eviware.soapui.impl.wsdl.teststeps.assertions.*;
import org.apache.commons.lang3.StringUtils;


def ts = testRunner.testCase.getTestStepByName("cruiseSearch-ROYAL");
String  url =  ts.getHttpRequest().getResponse().getURL(); 
log.info(url)

String app = StringUtils.substringBetween(url, "header.application=", "&amp;");
log.info(app)
testRunner.testCase.setPropertyValue("application",app);


String country = StringUtils.substringBetween(url, "criteria.country=", "&amp;");
log.info(country)
testRunner.testCase.setPropertyValue("country",country);


String currency = StringUtils.substringBetween(url, "criteria.currency=", "&amp;");
log.info(currency)
testRunner.testCase.setPropertyValue("currency",currency);

String language = StringUtils.substringBetween(url, "header.language=", "&amp;");
log.info(language)
testRunner.testCase.setPropertyValue("language",language);</script>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Fetch_RES_brand/ship/saildate/package" id="14a251bc-a73a-409d-9ee5-53d246883d54">
    <con:settings/>
    <con:config>
      <script>import java.io.*;
import java.util.*;
import com.eviware.soapui.model.testsuite.*;
import com.eviware.soapui.impl.wsdl.teststeps.assertions.*;


def ts = testRunner.testCase.getTestStepByName("cruiseSearch-ROYAL");
def res = new XmlSlurper().parseText(ts.getPropertyValue("ResponseAsXml"));

//Set Test Case Package Code
def packageCode = res.resultsByPackage.packageSummaryWithClassLevelPricing[0].packageReference.@code.text()
log.info(packageCode)
testRunner.testCase.setPropertyValue("packageCode",packageCode);


//Set Test Case Ship Code
def  shipCode= packageCode.substring(0,2);
log.info(shipCode)
testRunner.testCase.setPropertyValue("shipCode",shipCode);

//Set Test Case Sail Date
def sailDate = res.resultsByPackage.packageSummaryWithClassLevelPricing[0].cabinClassPriceBySailing[0].sailingRef.@saildate.text()
log.info(sailDate)
testRunner.testCase.setPropertyValue("sailDate",sailDate);

//Set Test Case Brand
def celebrityBrand = "C"
def royalBrand = "R"

def celebrityShips = ['AX', 'AT', 'BY', 'CS', 'EC', 'EG', 'EQ', 'FL', 'IN', 'ML', 'RF', 'SI', 'SL', 'SM', 'XP', 'XO']
def royalShips = ['AD', 'AL', 'AN', 'BR', 'NE', 'EN', 'EX', 'FR', 'GR', 'HM', 'IC', 'ID', 'JW', 'LB', 'MJ', 'MA', 'NV', 'NC', 'OA', 'OY', 'OV', 'QN', 'RD', 'RH', 'SR', 'SC', 'SY', 'WC', 'UT', 'VI', 'VY', 'WN']


if (celebrityShips.contains(shipCode)) {	
	testRunner.testCase.setPropertyValue("brand",celebrityBrand);
	} else {
		testRunner.testCase.setPropertyValue("brand",royalBrand);
		}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="retrieveSailings-R-without startDate and endDate" id="83309cfe-07e2-4471-8b00-2f31690db256">
    <con:settings/>
    <con:config service="ContentOperations" resourcePath="/sailings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="retrieveSailings-R-without startDate and endDate" id="c8a9953a-a2e4-43e1-a481-2dcb989f4686" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="AppKey" value="${#Project#AppKey}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:request/>
        <con:originalUri>https://stg1-int.api.rccl.com/esl/content/stg1/rest/v3/sailings</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="d7190a3e-233d-4673-8817-29bd9967338a" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="cfc16cc7-7e41-4992-b711-99d0e484a180" name="Script Assertion">
          <con:configuration>
            <scriptText>def jsonRes = messageExchange.getResponse().contentAsString


def jsonSlurper = new groovy.json.JsonSlurper()
def parse = jsonSlurper.parseText(jsonRes)

def dispatchCode = parse.sailingList.sailing.dispatchCode
log.info dispatchCode
assert dispatchCode !=null</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="header.language" value="${#TestCase#language}"/>
          <con:entry key="header.application" value="${#TestCase#application}"/>
          <con:entry key="endDate" value=""/>
          <con:entry key="sailingType" value=""/>
          <con:entry key="header.brand" value="${#TestCase#brand}"/>
          <con:entry key="startDate" value=""/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>header.application</con:entry>
          <con:entry>header.brand</con:entry>
          <con:entry>header.language</con:entry>
          <con:entry>sailingType</con:entry>
          <con:entry>startDate</con:entry>
          <con:entry>endDate</con:entry>
          <con:entry>packageId</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="4e2e9c45-9ecb-4317-97a3-865b4499eaf5">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
          <con:entry environmentId="168d4856-d89c-4c77-b153-ddc77dee7b2c">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
          <con:entry environmentId="6234d4f7-43f1-4cf7-9e47-d33ebe8ec561">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
          <con:entry environmentId="08fecf5f-2d43-4c85-81d6-7e0faa32320a">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
          <con:entry environmentId="eab9a467-bb15-480b-b760-b5b5b3144e23">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Validation" id="db937ebd-a1a9-4405-9113-4de4654f3c36">
    <con:settings/>
    <con:config>
      <script>import java.io.*;
import java.util.*;
import com.eviware.soapui.model.testsuite.*;
import com.eviware.soapui.impl.wsdl.teststeps.assertions.*;
import groovy.json.JsonSlurper
import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI 


def ts = testRunner.testCase.getTestStepByName("retrieveSailings-R-without startDate and endDate");
def res = new XmlSlurper().parseText(ts.getPropertyValue("ResponseAsXml"));

int countItineraries = res.sailingList.sailing.e.size()
log.info (countItineraries)


for(i=0; i&lt;=countItineraries-1;i++){

	def getShipCode = res.sailingList.sailing.e.shipCode[i].text()
	
	def getSailDate = res.sailingList.sailing.e.sailDate[i].text()

	def getDispatchCode = res.sailingList.sailing.e.dispatchCode[i].text()
	log.info(getShipCode +','+getSailDate +','+getDispatchCode)
		

	def dispatchCode = ['OPEN', 'CLOSED', 'WHITELIST']

	if (dispatchCode.contains(getDispatchCode)) {
	log.info('Matched '+getDispatchCode)
	
	} else {
		log.info('Not Matched')
		}	
}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="retrieveSailings-R-with startDate and endDate" id="ef34e7a7-6484-4e92-951c-96f3c75dfe96">
    <con:settings/>
    <con:config service="ContentOperations" resourcePath="/sailings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="retrieveSailings-R-with startDate and endDate" id="c8a9953a-a2e4-43e1-a481-2dcb989f4686" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="AppKey" value="${#Project#AppKey}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:request/>
        <con:originalUri>https://stg1-int.api.rccl.com/esl/content/stg1/rest/v3/sailings</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="d7190a3e-233d-4673-8817-29bd9967338a" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="27ea7a7d-2fc8-4721-bef4-a42acb42d86e">
          <con:configuration>
            <scriptText>def jsonRes = messageExchange.getResponse().contentAsString


def jsonSlurper = new groovy.json.JsonSlurper()
def parse = jsonSlurper.parseText(jsonRes)

def dispatchCode = parse.sailingList.sailing.dispatchCode
log.info dispatchCode
assert dispatchCode !=null</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="header.language" value="${#TestCase#language}"/>
          <con:entry key="header.application" value="${#TestCase#application}"/>
          <con:entry key="endDate" value="2023-04-25"/>
          <con:entry key="sailingType" value=""/>
          <con:entry key="header.brand" value="${#TestCase#brand}"/>
          <con:entry key="startDate" value="2023-01-01"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>header.application</con:entry>
          <con:entry>header.brand</con:entry>
          <con:entry>header.language</con:entry>
          <con:entry>sailingType</con:entry>
          <con:entry>startDate</con:entry>
          <con:entry>endDate</con:entry>
          <con:entry>packageId</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="4e2e9c45-9ecb-4317-97a3-865b4499eaf5">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
          <con:entry environmentId="168d4856-d89c-4c77-b153-ddc77dee7b2c">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
          <con:entry environmentId="6234d4f7-43f1-4cf7-9e47-d33ebe8ec561">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
          <con:entry environmentId="08fecf5f-2d43-4c85-81d6-7e0faa32320a">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
          <con:entry environmentId="eab9a467-bb15-480b-b760-b5b5b3144e23">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Fetch_otherParams" id="f754d061-cc5b-47b9-b2f6-7b0735c9253e">
    <con:settings/>
    <con:config>
      <script>import java.io.*;
import java.util.*;
import com.eviware.soapui.model.testsuite.*;
import com.eviware.soapui.impl.wsdl.teststeps.assertions.*;
import groovy.json.JsonSlurper
import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI 


def ts = testRunner.testCase.getTestStepByName("retrieveSailings-R-with startDate and endDate");
def res = new XmlSlurper().parseText(ts.getPropertyValue("ResponseAsXml"));


	def getShipCode = res.sailingList.sailing.e.shipCode[0].text()
	log.info(getShipCode)	
	testRunner.testCase.setPropertyValue("getShipCode",getShipCode);

	
	def getSailDate = res.sailingList.sailing.e.sailDate[0].text()
	log.info(getSailDate)	
	testRunner.testCase.setPropertyValue("getSailDate",getSailDate);


	def getDispatchCode = res.sailingList.sailing.e.dispatchCode[0].text()
	log.info(getDispatchCode)	
	testRunner.testCase.setPropertyValue("getDispatchCode",getDispatchCode);

	def getPackageId = res.sailingList.sailing.e.packageId[0].text()
	log.info(getPackageId)	
	testRunner.testCase.setPropertyValue("getPackageId",getPackageId);</script>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Validation 2" id="e29aa4f6-73ff-4e16-84a8-b820445494d7">
    <con:settings/>
    <con:config>
      <script>import java.io.*;
import java.util.*;
import com.eviware.soapui.model.testsuite.*;
import com.eviware.soapui.impl.wsdl.teststeps.assertions.*;
import groovy.json.JsonSlurper
import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI 


def ts = testRunner.testCase.getTestStepByName("retrieveSailings-R-with startDate and endDate");
def res = new XmlSlurper().parseText(ts.getPropertyValue("ResponseAsXml"));

int countItineraries = res.sailingList.sailing.e.size()
log.info (countItineraries)


for(i=0; i&lt;=countItineraries-1;i++){

	def getShipCode = res.sailingList.sailing.e.shipCode[i].text()
	
	def getSailDate = res.sailingList.sailing.e.sailDate[i].text()

	def getDispatchCode = res.sailingList.sailing.e.dispatchCode[i].text()
	log.info(getShipCode +','+getSailDate +','+getDispatchCode)
		

	def dispatchCode = ['OPEN', 'CLOSED', 'WHITELIST']

	if (dispatchCode.contains(getDispatchCode)) {
	log.info('Matched '+getDispatchCode)
	
	} else {
		log.info('Not Matched')
		}	
}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="retrieveSailings-R-with PackageId" id="748e6fb4-b124-4ec0-86da-af6650038f8a">
    <con:settings/>
    <con:config service="ContentOperations" resourcePath="/sailings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="retrieveSailings-R-with PackageId" id="c8a9953a-a2e4-43e1-a481-2dcb989f4686" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="AppKey" value="${#Project#AppKey}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:request/>
        <con:originalUri>https://stg1-int.api.rccl.com/esl/content/stg1/rest/v3/sailings</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="d7190a3e-233d-4673-8817-29bd9967338a" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="2af5580b-06ef-4466-a7aa-a6ce1911c9fc">
          <con:configuration>
            <scriptText>def jsonRes = messageExchange.getResponse().contentAsString


def jsonSlurper = new groovy.json.JsonSlurper()
def parse = jsonSlurper.parseText(jsonRes)

def dispatchCode = parse.sailingList.sailing.dispatchCode
log.info dispatchCode
assert dispatchCode !=null</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="header.language" value="${#TestCase#language}"/>
          <con:entry key="header.application" value="${#TestCase#application}"/>
          <con:entry key="endDate" value="${#TestCase#getSailDate}"/>
          <con:entry key="packageId" value="${#TestCase#getPackageId}"/>
          <con:entry key="sailingType" value=""/>
          <con:entry key="header.brand" value="${#TestCase#brand}"/>
          <con:entry key="startDate" value="${#TestCase#getSailDate}"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>header.application</con:entry>
          <con:entry>header.brand</con:entry>
          <con:entry>header.language</con:entry>
          <con:entry>sailingType</con:entry>
          <con:entry>startDate</con:entry>
          <con:entry>endDate</con:entry>
          <con:entry>packageId</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="4e2e9c45-9ecb-4317-97a3-865b4499eaf5">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
          <con:entry environmentId="168d4856-d89c-4c77-b153-ddc77dee7b2c">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
          <con:entry environmentId="6234d4f7-43f1-4cf7-9e47-d33ebe8ec561">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
          <con:entry environmentId="08fecf5f-2d43-4c85-81d6-7e0faa32320a">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
          <con:entry environmentId="eab9a467-bb15-480b-b760-b5b5b3144e23">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Validation 3" id="e959b728-1c5b-4b3a-bfa2-236d00b85d5e">
    <con:settings/>
    <con:config>
      <script>import java.io.*;
import java.util.*;
import com.eviware.soapui.model.testsuite.*;
import com.eviware.soapui.impl.wsdl.teststeps.assertions.*;
import groovy.json.JsonSlurper
import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI 


def ts = testRunner.testCase.getTestStepByName("retrieveSailings-R-with PackageId");
def res = new XmlSlurper().parseText(ts.getPropertyValue("ResponseAsXml"));

int countItineraries = res.sailingList.sailing.e.size()
log.info (countItineraries)


for(i=0; i&lt;=countItineraries-1;i++){

	def getShipCode = res.sailingList.sailing.e.shipCode[i].text()
	
	def getSailDate = res.sailingList.sailing.e.sailDate[i].text()

	def getDispatchCode = res.sailingList.sailing.e.dispatchCode[i].text()
	log.info(getShipCode +','+getSailDate +','+getDispatchCode)
		

	def dispatchCode = ['OPEN', 'CLOSED', 'WHITELIST']

	if (dispatchCode.contains(getDispatchCode)) {
	log.info('Matched '+getDispatchCode)
	
	} else {
		log.info('Not Matched')
		}	
}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="cruiseSearch-CEL" id="188da432-e4eb-4182-b0ac-53b9876ded15">
    <con:settings/>
    <con:config service="Cruise Search" methodName="cruiseSearch" resourcePath="/esl/search/rest/cruiseSearch" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="cruiseSearch-CEL" id="4b83a4b3-3cb3-4dac-ab4a-9f8353f23135" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:request/>
        <con:originalUri>http://eslaservicestst01.rccl.com/esl/search/rest/cruiseSearch</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="aeea0b73-a636-43f8-9e7e-592c253cb5c6" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" id="970f9f2a-b98c-4157-a7d0-bdb110cadbb3" name="Script Assertion">
          <con:configuration>
            <scriptText>def xmlRes = messageExchange.getResponse().contentAsString
def xmlSlurper = new groovy.xml.XmlSlurper();
def parse = xmlSlurper.parseText(xmlRes)
log.info parse


def totalHits = (parse.resultsSummary.totalHits.text()).toInteger()
log.info totalHits
assert totalHits!=0</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="qualifiers.qualifierScope" value="SEARCH_AND_PRICE"/>
          <con:entry key="header.language" value="en_us"/>
          <con:entry key="resultsPreference.includeOnlyIfPriceAvailable" value="true"/>
          <con:entry key="criteria.channel" value="VP"/>
          <con:entry key="qualifiers.offersType.strictPricingFlag" value="true"/>
          <con:entry key="qualifiers.priceScope" value="REQUESTED_AVAILABLE"/>
          <con:entry key="resultsPreference.includeResults" value="true"/>
          <con:entry key="criteria.currency" value="USD"/>
          <con:entry key="resultsPreference.strictSearch" value="true"/>
          <con:entry key="criteria.ship.value" value="${#Global#celebrityShip}"/>
          <con:entry key="resultsPreference.priceLevel.bestPricedCategory" value="true"/>
          <con:entry key="criteria.sailingDate.dateRange.from" value="${#Global#dateRangeFrom}"/>
          <con:entry key="criteria.sailingDate.date" value=""/>
          <con:entry key="resultsPreference.sortOrder" value="DESCENDING"/>
          <con:entry key="resultsPreference.includePrices" value="true"/>
          <con:entry key="resultsPreference.groupBy" value="PACKAGE"/>
          <con:entry key="criteria.bookingType" value="FIT"/>
          <con:entry key="resultsPreference.pagination.count" value="100"/>
          <con:entry key="header.domainId" value="1"/>
          <con:entry key="criteria.occupancy.adult" value="2"/>
          <con:entry key="resultsPreference.sortBy" value="DURATION"/>
          <con:entry key="criteria.sailingDate.dateRange.to" value="${#Global#dateRangeTo}"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>criteria.channel</con:entry>
          <con:entry>criteria.bookingType</con:entry>
          <con:entry>header.domainId</con:entry>
          <con:entry>header.language</con:entry>
          <con:entry>header.application</con:entry>
          <con:entry>criteria.brand.value</con:entry>
          <con:entry>criteria.ship.value</con:entry>
          <con:entry>criteria.cruiseType.value</con:entry>
          <con:entry>criteria.office</con:entry>
          <con:entry>criteria.country</con:entry>
          <con:entry>criteria.currency</con:entry>
          <con:entry>criteria.occupancy.adult</con:entry>
          <con:entry>resultsPreference.pagination.offset</con:entry>
          <con:entry>resultsPreference.pagination.count</con:entry>
          <con:entry>resultsPreference.strictSearch</con:entry>
          <con:entry>resultsPreference.sortBy</con:entry>
          <con:entry>resultsPreference.sortOrder</con:entry>
          <con:entry>resultsPreference.groupBy</con:entry>
          <con:entry>resultsPreference.includeResults</con:entry>
          <con:entry>resultsPreference.includeOnlyIfPriceAvailable</con:entry>
          <con:entry>resultsPreference.priceLevel.bestPricedCategory</con:entry>
          <con:entry>resultsPreference.includePrices</con:entry>
          <con:entry>qualifiers.priceScope</con:entry>
          <con:entry>qualifiers.qualifierScope</con:entry>
          <con:entry>qualifiers.offersType.strictPricingFlag</con:entry>
          <con:entry>qualifiers.itineraryGroup.value</con:entry>
          <con:entry>criteria.sailingDate.dateRange.from</con:entry>
          <con:entry>criteria.sailingDate.dateRange.to</con:entry>
          <con:entry>criteria.sailingDate.date</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="c3a4b580-ecc4-4d69-9e64-f4e9abf07977">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="1c5befc7-2431-43ac-871b-0634d210ea0b">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
          <con:entry environmentId="40616221-3f9c-4753-b281-39f5bafc4e2c">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Fetch_REQ_app/country/currency 2" id="26857d06-8bf7-4ef5-8cba-2d1d82cae0e6">
    <con:settings/>
    <con:config>
      <script>import java.io.*;
import java.util.*;
import com.eviware.soapui.model.testsuite.*;
import com.eviware.soapui.impl.wsdl.teststeps.assertions.*;
import org.apache.commons.lang3.StringUtils;


def ts = testRunner.testCase.getTestStepByName("cruiseSearch-CEL");
String  url =  ts.getHttpRequest().getResponse().getURL(); 
log.info(url)

String app = StringUtils.substringBetween(url, "header.application=", "&amp;");
log.info(app)
testRunner.testCase.setPropertyValue("application",app);


String country = StringUtils.substringBetween(url, "criteria.country=", "&amp;");
log.info(country)
testRunner.testCase.setPropertyValue("country",country);


String currency = StringUtils.substringBetween(url, "criteria.currency=", "&amp;");
log.info(currency)
testRunner.testCase.setPropertyValue("currency",currency);

String language = StringUtils.substringBetween(url, "header.language=", "&amp;");
log.info(language)
testRunner.testCase.setPropertyValue("language",language);</script>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Fetch_RES_brand/ship/saildate/package 2" id="6e42aebb-ea49-4bab-8ee8-a8f94eff2ace">
    <con:settings/>
    <con:config>
      <script>import java.io.*;
import java.util.*;
import com.eviware.soapui.model.testsuite.*;
import com.eviware.soapui.impl.wsdl.teststeps.assertions.*;


def ts = testRunner.testCase.getTestStepByName("cruiseSearch-CEL");
def res = new XmlSlurper().parseText(ts.getPropertyValue("ResponseAsXml"));

//Set Test Case Package Code
def packageCode = res.resultsByPackage.packageSummaryWithClassLevelPricing[0].packageReference.@code.text()
log.info(packageCode)
testRunner.testCase.setPropertyValue("packageCode",packageCode);


//Set Test Case Ship Code
def  shipCode= packageCode.substring(0,2);
log.info(shipCode)
testRunner.testCase.setPropertyValue("shipCode",shipCode);

//Set Test Case Sail Date
def sailDate = res.resultsByPackage.packageSummaryWithClassLevelPricing[0].cabinClassPriceBySailing[0].sailingRef.@saildate.text()
log.info(sailDate)
testRunner.testCase.setPropertyValue("sailDate",sailDate);

//Set Test Case Brand
def celebrityBrand = "C"
def royalBrand = "R"

def celebrityShips = ['AX', 'AT', 'BY', 'CS', 'EC', 'EG', 'EQ', 'FL', 'IN', 'ML', 'RF', 'SI', 'SL', 'SM', 'XP', 'XO']
def royalShips = ['AD', 'AL', 'AN', 'BR', 'NE', 'EN', 'EX', 'FR', 'GR', 'HM', 'IC', 'ID', 'JW', 'LB', 'MJ', 'MA', 'NV', 'NC', 'OA', 'OY', 'OV', 'QN', 'RD', 'RH', 'SR', 'SC', 'SY', 'WC', 'UT', 'VI', 'VY', 'WN']


if (celebrityShips.contains(shipCode)) {	
	testRunner.testCase.setPropertyValue("brand",celebrityBrand);
	} else {
		testRunner.testCase.setPropertyValue("brand",royalBrand);
		}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="retrieveSailings-C-without startDate and endDate" id="510713ea-3c58-4480-8cde-177231eac4cd">
    <con:settings/>
    <con:config service="ContentOperations" resourcePath="/sailings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="retrieveSailings-C-without startDate and endDate" id="c8a9953a-a2e4-43e1-a481-2dcb989f4686" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="AppKey" value="${#Project#AppKey}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:request/>
        <con:originalUri>https://stg1-int.api.rccl.com/esl/content/stg1/rest/v3/sailings</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="d7190a3e-233d-4673-8817-29bd9967338a" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="5a511474-1b5f-4f47-a4b7-847127d29e02">
          <con:configuration>
            <scriptText>def jsonRes = messageExchange.getResponse().contentAsString


def jsonSlurper = new groovy.json.JsonSlurper()
def parse = jsonSlurper.parseText(jsonRes)

def dispatchCode = parse.sailingList.sailing.dispatchCode
log.info dispatchCode
assert dispatchCode !=null</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="header.language" value="${#TestCase#language}"/>
          <con:entry key="header.application" value="${#TestCase#application}"/>
          <con:entry key="endDate" value=""/>
          <con:entry key="sailingType" value=""/>
          <con:entry key="header.brand" value="${#TestCase#brand}"/>
          <con:entry key="startDate" value=""/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>header.application</con:entry>
          <con:entry>header.brand</con:entry>
          <con:entry>header.language</con:entry>
          <con:entry>sailingType</con:entry>
          <con:entry>startDate</con:entry>
          <con:entry>endDate</con:entry>
          <con:entry>packageId</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="4e2e9c45-9ecb-4317-97a3-865b4499eaf5">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
          <con:entry environmentId="168d4856-d89c-4c77-b153-ddc77dee7b2c">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
          <con:entry environmentId="6234d4f7-43f1-4cf7-9e47-d33ebe8ec561">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
          <con:entry environmentId="08fecf5f-2d43-4c85-81d6-7e0faa32320a">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
          <con:entry environmentId="eab9a467-bb15-480b-b760-b5b5b3144e23">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Validation 4" id="872b7a8d-5d17-4f8f-87ad-dd9863848c2a">
    <con:settings/>
    <con:config>
      <script>import java.io.*;
import java.util.*;
import com.eviware.soapui.model.testsuite.*;
import com.eviware.soapui.impl.wsdl.teststeps.assertions.*;
import groovy.json.JsonSlurper
import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI 


def ts = testRunner.testCase.getTestStepByName("retrieveSailings-C-without startDate and endDate");
def res = new XmlSlurper().parseText(ts.getPropertyValue("ResponseAsXml"));

int countItineraries = res.sailingList.sailing.e.size()
log.info (countItineraries)


for(i=0; i&lt;=countItineraries-1;i++){

	def getShipCode = res.sailingList.sailing.e.shipCode[i].text()
	
	def getSailDate = res.sailingList.sailing.e.sailDate[i].text()

	def getDispatchCode = res.sailingList.sailing.e.dispatchCode[i].text()
	log.info(getShipCode +','+getSailDate +','+getDispatchCode)
		

	def dispatchCode = ['OPEN', 'CLOSED', 'WHITELIST']

	if (dispatchCode.contains(getDispatchCode)) {
	log.info('Matched '+getDispatchCode)
	
	} else {
		log.info('Not Matched')
		}	
}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="retrieveSailings-C-with startDate and endDate" id="0c229ef6-f291-4760-9c5b-475b79ec9609">
    <con:settings/>
    <con:config service="ContentOperations" resourcePath="/sailings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="retrieveSailings-C-with startDate and endDate" id="c8a9953a-a2e4-43e1-a481-2dcb989f4686" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="AppKey" value="${#Project#AppKey}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:request/>
        <con:originalUri>https://stg1-int.api.rccl.com/esl/content/stg1/rest/v3/sailings</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="d7190a3e-233d-4673-8817-29bd9967338a" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="6c217798-56f6-4f9f-aa2b-7c46a154152f">
          <con:configuration>
            <scriptText>def jsonRes = messageExchange.getResponse().contentAsString


def jsonSlurper = new groovy.json.JsonSlurper()
def parse = jsonSlurper.parseText(jsonRes)

def dispatchCode = parse.sailingList.sailing.dispatchCode
log.info dispatchCode
assert dispatchCode !=null</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="header.language" value="${#TestCase#language}"/>
          <con:entry key="header.application" value="${#TestCase#application}"/>
          <con:entry key="endDate" value="2023-04-25"/>
          <con:entry key="sailingType" value=""/>
          <con:entry key="header.brand" value="${#TestCase#brand}"/>
          <con:entry key="startDate" value="2023-01-01"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>header.application</con:entry>
          <con:entry>header.brand</con:entry>
          <con:entry>header.language</con:entry>
          <con:entry>sailingType</con:entry>
          <con:entry>startDate</con:entry>
          <con:entry>endDate</con:entry>
          <con:entry>packageId</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="4e2e9c45-9ecb-4317-97a3-865b4499eaf5">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
          <con:entry environmentId="168d4856-d89c-4c77-b153-ddc77dee7b2c">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
          <con:entry environmentId="6234d4f7-43f1-4cf7-9e47-d33ebe8ec561">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
          <con:entry environmentId="08fecf5f-2d43-4c85-81d6-7e0faa32320a">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
          <con:entry environmentId="eab9a467-bb15-480b-b760-b5b5b3144e23">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Fetch_otherParams 2" id="35d0fde1-afc9-4f2a-91c0-3a660d3d9956">
    <con:settings/>
    <con:config>
      <script>import java.io.*;
import java.util.*;
import com.eviware.soapui.model.testsuite.*;
import com.eviware.soapui.impl.wsdl.teststeps.assertions.*;
import groovy.json.JsonSlurper
import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI 


def ts = testRunner.testCase.getTestStepByName("retrieveSailings-C-with startDate and endDate");
def res = new XmlSlurper().parseText(ts.getPropertyValue("ResponseAsXml"));


	def getShipCode = res.sailingList.sailing.e.shipCode[0].text()
	log.info(getShipCode)	
	testRunner.testCase.setPropertyValue("getShipCode",getShipCode);

	
	def getSailDate = res.sailingList.sailing.e.sailDate[0].text()
	log.info(getSailDate)	
	testRunner.testCase.setPropertyValue("getSailDate",getSailDate);


	def getDispatchCode = res.sailingList.sailing.e.dispatchCode[0].text()
	log.info(getDispatchCode)	
	testRunner.testCase.setPropertyValue("getDispatchCode",getDispatchCode);

	def getPackageId = res.sailingList.sailing.e.packageId[0].text()
	log.info(getPackageId)	
	testRunner.testCase.setPropertyValue("getPackageId",getPackageId);</script>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Validation 5" id="c1439a27-e78f-4d6a-85f4-e6d7073ccfe4">
    <con:settings/>
    <con:config>
      <script>import java.io.*;
import java.util.*;
import com.eviware.soapui.model.testsuite.*;
import com.eviware.soapui.impl.wsdl.teststeps.assertions.*;
import groovy.json.JsonSlurper
import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI 


def ts = testRunner.testCase.getTestStepByName("retrieveSailings-C-with startDate and endDate");
def res = new XmlSlurper().parseText(ts.getPropertyValue("ResponseAsXml"));

int countItineraries = res.sailingList.sailing.e.size()
log.info (countItineraries)


for(i=0; i&lt;=countItineraries-1;i++){

	def getShipCode = res.sailingList.sailing.e.shipCode[i].text()
	
	def getSailDate = res.sailingList.sailing.e.sailDate[i].text()

	def getDispatchCode = res.sailingList.sailing.e.dispatchCode[i].text()
	log.info(getShipCode +','+getSailDate +','+getDispatchCode)
		

	def dispatchCode = ['OPEN', 'CLOSED', 'WHITELIST']

	if (dispatchCode.contains(getDispatchCode)) {
	log.info('Matched '+getDispatchCode)
	
	} else {
		log.info('Not Matched')
		}	
}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="retrieveSailings-C-with PackageId" id="464d1bcf-56bc-4b85-91de-b76ef3950940">
    <con:settings/>
    <con:config service="ContentOperations" resourcePath="/sailings" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="retrieveSailings-C-with PackageId" id="c8a9953a-a2e4-43e1-a481-2dcb989f4686" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;con:entry key="AppKey" value="${#Project#AppKey}" xmlns:con="http://eviware.com/soapui/config"/></con:setting>
        </con:settings>
        <con:request/>
        <con:originalUri>https://stg1-int.api.rccl.com/esl/content/stg1/rest/v3/sailings</con:originalUri>
        <con:assertion type="Valid HTTP Status Codes" id="d7190a3e-233d-4673-8817-29bd9967338a" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="GroovyScriptAssertion" name="Script Assertion" id="42652193-89f9-403b-a319-a5dc24314a7b">
          <con:configuration>
            <scriptText>def jsonRes = messageExchange.getResponse().contentAsString


def jsonSlurper = new groovy.json.JsonSlurper()
def parse = jsonSlurper.parseText(jsonRes)

def dispatchCode = parse.sailingList.sailing.dispatchCode
log.info dispatchCode
assert dispatchCode !=null</scriptText>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters>
          <con:entry key="header.language" value="${#TestCase#language}"/>
          <con:entry key="header.application" value="${#TestCase#application}"/>
          <con:entry key="endDate" value="${#TestCase#getSailDate}"/>
          <con:entry key="packageId" value="${#TestCase#getPackageId}"/>
          <con:entry key="sailingType" value=""/>
          <con:entry key="header.brand" value="${#TestCase#brand}"/>
          <con:entry key="startDate" value="${#TestCase#getSailDate}"/>
        </con:parameters>
        <con:parameterOrder>
          <con:entry>header.application</con:entry>
          <con:entry>header.brand</con:entry>
          <con:entry>header.language</con:entry>
          <con:entry>sailingType</con:entry>
          <con:entry>startDate</con:entry>
          <con:entry>endDate</con:entry>
          <con:entry>packageId</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="4e2e9c45-9ecb-4317-97a3-865b4499eaf5">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
          <con:entry environmentId="168d4856-d89c-4c77-b153-ddc77dee7b2c">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
          <con:entry environmentId="6234d4f7-43f1-4cf7-9e47-d33ebe8ec561">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
          <con:entry environmentId="08fecf5f-2d43-4c85-81d6-7e0faa32320a">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
          <con:entry environmentId="eab9a467-bb15-480b-b760-b5b5b3144e23">
            <con:authProfile>No Authorization</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Validation 6" id="9d59d84c-6f83-4b37-a7e3-c4fe20050e3a">
    <con:settings/>
    <con:config>
      <script>import java.io.*;
import java.util.*;
import com.eviware.soapui.model.testsuite.*;
import com.eviware.soapui.impl.wsdl.teststeps.assertions.*;
import groovy.json.JsonSlurper
import com.eviware.soapui.settings.SSLSettings
import com.eviware.soapui.SoapUI 


def ts = testRunner.testCase.getTestStepByName("retrieveSailings-C-with PackageId");
def res = new XmlSlurper().parseText(ts.getPropertyValue("ResponseAsXml"));

int countItineraries = res.sailingList.sailing.e.size()
log.info (countItineraries)


for(i=0; i&lt;=countItineraries-1;i++){

	def getShipCode = res.sailingList.sailing.e.shipCode[i].text()
	
	def getSailDate = res.sailingList.sailing.e.sailDate[i].text()

	def getDispatchCode = res.sailingList.sailing.e.dispatchCode[i].text()
	log.info(getShipCode +','+getSailDate +','+getDispatchCode)
		

	def dispatchCode = ['OPEN', 'CLOSED', 'WHITELIST']

	if (dispatchCode.contains(getDispatchCode)) {
	log.info('Matched '+getDispatchCode)
	
	} else {
		log.info('Not Matched')
		}	
}</script>
    </con:config>
  </con:testStep>
  <con:properties>
    <con:property>
      <con:name>application</con:name>
      <con:value>celebritycruises.com</con:value>
    </con:property>
    <con:property>
      <con:name>country</con:name>
      <con:value>USA</con:value>
    </con:property>
    <con:property>
      <con:name>currency</con:name>
      <con:value>USD</con:value>
    </con:property>
    <con:property>
      <con:name>language</con:name>
      <con:value>en_us</con:value>
    </con:property>
    <con:property>
      <con:name>packageCode</con:name>
      <con:value>SL17T034</con:value>
    </con:property>
    <con:property>
      <con:name>shipCode</con:name>
      <con:value>SL</con:value>
    </con:property>
    <con:property>
      <con:name>sailDate</con:name>
      <con:value>2023-10-01</con:value>
    </con:property>
    <con:property>
      <con:name>brand</con:name>
      <con:value>C</con:value>
    </con:property>
    <con:property>
      <con:name>getShipCode</con:name>
      <con:value>EG</con:value>
    </con:property>
    <con:property>
      <con:name>getSailDate</con:name>
      <con:value>2023-01-01</con:value>
    </con:property>
    <con:property>
      <con:name>getDispatchCode</con:name>
      <con:value>CLOSED</con:value>
    </con:property>
    <con:property>
      <con:name>getPackageId</con:name>
      <con:value>EGEGTST2</con:value>
    </con:property>
  </con:properties>
  <con:reportParameters/>
</con:testCase>
